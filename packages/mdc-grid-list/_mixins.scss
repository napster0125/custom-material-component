//
// Copyright 2019 Google Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//

@use "sass:map";
@use "@material/feature-targeting/functions";
@use "@material/feature-targeting/mixins" as feature-targeting-mixins;
@use "@material/rtl/mixins" as rtl-mixins;
@use "@material/theme/mixins" as theme-mixins;
@use "@material/typography/mixins" as typography-mixins;
@use "./variables";
@use "@material/typography/variables" as typography-variables;

@mixin core-styles($query: functions.all()) {
  $feat-color: functions.create-target($query, color);
  $feat-structure: functions.create-target($query, structure);
  $feat-typography: functions.create-target($query, typography);

  // postcss-bem-linter: define grid-list
  @include tile-aspect(1, $query: $query);
  @include tile-gutter(4px, $query: $query);

  .mdc-grid-list__tiles {
    @include feature-targeting-mixins.targets($feat-structure) {
      display: flex;
      flex-flow: row wrap;
      padding: 0;
    }
  }

  .mdc-grid-list--tile-gutter-1 {
    @include tile-gutter(1px, $query: $query);
  }

  .mdc-grid-list--tile-aspect-16x9 {
    @include tile-aspect(16 / 9, $query: $query);
  }

  .mdc-grid-list--tile-aspect-3x2 {
    @include tile-aspect(3 / 2, $query: $query);
  }

  .mdc-grid-list--tile-aspect-2x3 {
    @include tile-aspect(2 / 3, $query: $query);
  }

  .mdc-grid-list--tile-aspect-4x3 {
    @include tile-aspect(4 / 3, $query: $query);
  }

  .mdc-grid-list--tile-aspect-3x4 {
    @include tile-aspect(3 / 4, $query: $query);
  }
  // postcss-bem-linter: end

  // postcss-bem-linter: define grid-tile
  .mdc-grid-tile {
    @include feature-targeting-mixins.targets($feat-structure) {
      display: block;
      position: relative;
      /* @alternate */
      width: variables.$tile-width;
      // stylelint-disable-next-line declaration-block-no-duplicate-properties
      width: var(--mdc-grid-list-tile-width, variables.$tile-width);
    }
  }

  .mdc-grid-tile__primary {
    @include feature-targeting-mixins.targets($feat-color) {
      @include theme-mixins.prop(background-color, background);
      @include theme-mixins.prop(color, text-primary-on-background);
    }

    @include feature-targeting-mixins.targets($feat-structure) {
      position: relative;
      height: 0;
    }
  }

  .mdc-grid-tile__primary-content {
    @include feature-targeting-mixins.targets($feat-structure) {
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-repeat: no-repeat;
      background-position: center;
      background-size: cover;
    }
  }

  .mdc-grid-tile__secondary {
    @include feature-targeting-mixins.targets($feat-color) {
      @include theme-mixins.prop(background-color, primary);
      @include theme-mixins.prop(color, on-primary);
    }

    @include feature-targeting-mixins.targets($feat-structure) {
      position: absolute;
      bottom: 0;
      box-sizing: border-box;
      height: variables.$oneline-cap-secondary-height;
      padding: variables.$tile-secondary-padding;
    }
  }

  .mdc-grid-tile__title {
    @include typography-mixins.overflow-ellipsis($query: $query);

    @include feature-targeting-mixins.targets($feat-structure) {
      display: block;
      margin: 0;
      padding: 0;
      font-size: 1rem;
      line-height: 1rem;
    }

    @include feature-targeting-mixins.targets($feat-typography) {
      font-weight: #{map.get(typography-variables.$font-weight-values, medium)};
    }
  }

  .mdc-grid-tile__support-text {
    @include typography-mixins.typography(subtitle1, $query: $query);
    @include typography-mixins.overflow-ellipsis($query: $query);

    @include feature-targeting-mixins.targets($feat-structure) {
      display: block;
      margin: 0;
      margin-top: 4px;
      padding: 0;
    }
  }

  .mdc-grid-tile__icon {
    @include feature-targeting-mixins.targets($feat-structure) {
      position: absolute;
      top: calc(50% - #{variables.$tile-secondary-icon-size} / 2);
      font-size: 0;
    }
  }
  // postcss-bem-linter: end

  // Linter disabled because we are nesting grid-tile under grid-list.
  .mdc-grid-list--twoline-caption .mdc-grid-tile__secondary {
    @include feature-targeting-mixins.targets($feat-structure) {
      height: variables.$twoline-cap-secondary-height;
    }
  }

  .mdc-grid-list--header-caption .mdc-grid-tile__secondary {
    @include feature-targeting-mixins.targets($feat-structure) {
      top: 0;
      bottom: auto;
    }
  }

  .mdc-grid-list--with-icon-align-start {
    .mdc-grid-tile__secondary {
      @include feature-targeting-mixins.targets($feat-structure) {
        @include rtl-mixins.reflexive-property(
          padding,
          variables.$tile-secondary-padding * 2 + variables.$tile-secondary-icon-size,
          variables.$tile-secondary-padding-narrow,
          ".mdc-grid-list"
        );
      }
    }

    .mdc-grid-tile__icon {
      @include feature-targeting-mixins.targets($feat-structure) {
        @include rtl-mixins.reflexive-position(left, variables.$tile-secondary-padding, ".mdc-grid-list");

        font-size: variables.$tile-secondary-icon-size;
      }
    }
  }

  .mdc-grid-list--with-icon-align-end {
    .mdc-grid-tile__secondary {
      @include feature-targeting-mixins.targets($feat-structure) {
        @include rtl-mixins.reflexive-property(
          padding,
          variables.$tile-secondary-padding,
          variables.$tile-secondary-padding * 2 + variables.$tile-secondary-icon-size,
          ".mdc-grid-list"
        );
      }
    }

    .mdc-grid-tile__icon {
      @include feature-targeting-mixins.targets($feat-structure) {
        @include rtl-mixins.reflexive-position(right, variables.$tile-secondary-padding, ".mdc-grid-list");

        font-size: variables.$tile-secondary-icon-size;
      }
    }
  }
}

@mixin tile-aspect($width-height-ratio, $query: functions.all()) {
  $feat-structure: functions.create-target($query, structure);

  .mdc-grid-tile__primary {
    @include feature-targeting-mixins.targets($feat-structure) {
      padding-bottom: calc(100% / #{$width-height-ratio});
    }
  }
}

@mixin tile-gutter($gutter-width, $query: functions.all()) {
  $feat-structure: functions.create-target($query, structure);

  .mdc-grid-tile {
    @include feature-targeting-mixins.targets($feat-structure) {
      margin: $gutter-width / 2 0;
      padding: 0 $gutter-width / 2;
    }
  }

  .mdc-grid-tile__secondary {
    @include feature-targeting-mixins.targets($feat-structure) {
      left: $gutter-width / 2;
      width: calc(100% - #{$gutter-width});
    }
  }

  .mdc-grid-list__tiles {
    @include feature-targeting-mixins.targets($feat-structure) {
      margin: $gutter-width / 2 auto;
    }
  }
}
