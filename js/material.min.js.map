{"version":3,"sources":["animation.js","button.js","checkbox.js","icon-toggle.js","menu.js","progress.js","radio.js","slider.js","spinner.js","switch.js","tabs.js","textfield.js","tooltip.js","layout.js","ripple.js","mdlComponentHandler.js","rAF.js","material.js"],"names":["DemoAnimation","element","this","element_","position_","Constant_","STARTING_POSITION","movable_","querySelector","CssClasses_","MOVABLE","init","MaterialButton","MaterialCheckbox","MaterialIconToggle","MaterialMenu","MaterialProgress","MaterialRadio","MaterialSlider","isIE_","window","navigator","msPointerEnabled","MaterialSpinner","MaterialSwitch","MaterialTabs","MaterialTab","tab","ctx","classList","contains","MDL_JS_RIPPLE_EFFECT","rippleContainer","document","createElement","add","MDL_RIPPLE_CONTAINER","ripple","MDL_RIPPLE","appendChild","addEventListener","e","preventDefault","href","split","panel","resetTabState_","resetPanelState_","ACTIVE_CLASS","MaterialTextfield","maxRows","NO_MAX_ROWS","MaterialTooltip","MaterialLayout","MaterialLayoutTab","tabs","panels","layout","tabBar_","JS_RIPPLE_EFFECT","RIPPLE_CONTAINER","RIPPLE","content_","MaterialRipple","componentHandler","findRegisteredClass_","name","optReplace","i","registeredComponents_","length","className","undefined","upgradeDomInternal","jsClass","cssClass","registeredClass","elements","querySelectorAll","n","upgradeElementInternal","dataUpgraded","getAttribute","indexOf","setAttribute","instance","classConstructor","createdComponents_","push","callbacks","forEach","callback","widget","ev","createEvent","initEvent","dispatchEvent","registerInternal","config","newConfig","constructor","classAsString","found","registerUpgradedCallbackInternal","regClass","upgradeAllRegisteredInternal","upgradeDom","upgradeElement","upgradeAllRegistered","registerUpgradedCallback","register","Array","prototype","documentElement","Date","now","getTime","vendors","requestAnimationFrame","vp","cancelAnimationFrame","test","userAgent","lastTime","nextTime","Math","max","setTimeout","clearTimeout","POSITION_PREFIX","handleClick_","event","remove","console","error","bind","RIPPLE_EFFECT","blurHandler","blur","disable","disabled","enable","TINY_TIMEOUT","INPUT","BOX_OUTLINE","FOCUS_HELPER","TICK_OUTLINE","RIPPLE_IGNORE_EVENTS","RIPPLE_CENTER","IS_FOCUSED","IS_DISABLED","IS_CHECKED","IS_UPGRADED","onChange_","updateClasses_","onFocus_","onBlur_","onMouseUp_","blur_","inputElement_","checked","check","uncheck","boxOutline","tickContainer","tickOutline","TRANSITION_DURATION_SECONDS","TRANSITION_DURATION_FRACTION","CLOSE_TIMEOUT","Keycodes_","ENTER","ESCAPE","SPACE","UP_ARROW","DOWN_ARROW","CONTAINER","OUTLINE","ITEM","ITEM_RIPPLE_CONTAINER","IS_VISIBLE","IS_ANIMATING","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","UNALIGNED","container","parentElement","insertBefore","removeChild","container_","outline","outline_","forElId","forEl","getElementById","forElement_","handleForClick_","handleForKeyboardEvent_","items","handleItemClick_","tabIndex","handleItemKeyboardEvent_","item","evt","rect","getBoundingClientRect","forRect","style","right","top","offsetTop","offsetHeight","left","offsetLeft","bottom","toggle","keyCode","focus","currentIndex","slice","call","target","MouseEvent","click","hide","stopPropagation","closing_","applyClip_","height","width","clip","addAnimationEndListener_","cleanup","show","transitionDuration","itemDelay","transitionDelay","removeEventListener","INDETERMINATE_CLASS","setProgress","p","progressbar_","setBuffer","bufferbar_","auxbar_","el","JS_RADIO","RADIO_BTN","RADIO_OUTER_CIRCLE","RADIO_INNER_CIRCLE","btnElement_","radios","getElementsByClassName","button","onMouseup_","label","outerCircle","innerCircle","IE_CONTAINER","SLIDER_CONTAINER","BACKGROUND_FLEX","BACKGROUND_LOWER","BACKGROUND_UPPER","IS_LOWEST_VALUE","onInput_","updateValueStyles_","fraction","value","min","backgroundLower_","flex","webkitFlex","backgroundUpper_","change","containerIE","backgroundFlex","MDL_SPINNER_LAYER_COUNT","MDL_SPINNER_LAYER","MDL_SPINNER_CIRCLE_CLIPPER","MDL_SPINNER_CIRCLE","MDL_SPINNER_GAP_PATCH","MDL_SPINNER_LEFT","MDL_SPINNER_RIGHT","createLayer","index","layer","leftClipper","gapPatch","rightClipper","circleOwners","circle","stop","start","TRACK","THUMB","on","off","track","thumb","focusHelper","TAB_CLASS","PANEL_CLASS","UPGRADED_CLASS","MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS","initTabs_","tabs_","panels_","k","j","MAX_ROWS_ATTRIBUTE","LABEL","IS_DIRTY","IS_INVALID","onKeyDown_","currentRowCount","input_","validity","valid","label_","hasAttribute","parseInt","isNaN","IS_ACTIVE","handleMouseEnter_","props","marginLeft","offsetWidth","handleMouseLeave_","MAX_WIDTH","Mode_","STANDARD","SEAMED","WATERFALL","SCROLL","HEADER","DRAWER","CONTENT","DRAWER_BTN","HEADER_SEAMED","HEADER_WATERFALL","HEADER_SCROLL","FIXED_HEADER","OBFUSCATOR","TAB_BAR","TAB_CONTAINER","TAB","TAB_BAR_BUTTON","TAB_BAR_LEFT_BUTTON","TAB_BAR_RIGHT_BUTTON","PANEL","HAS_DRAWER_CLASS","SHADOW_CLASS","COMPACT_CLASS","SMALL_SCREEN_CLASS","DRAWER_OPEN_CLASS","ANIMATING_CLASS","contentScrollHandler_","header_","scrollTop","screenSizeHandler_","screenSizeMediaQuery_","matches","drawer_","drawerToggleHandler_","headerTransitionEndHandler","headerClickHandler","tabBar","mode","matchMedia","addListener","drawerButton","firstChild","obfuscator","tabContainer","leftButton","scrollLeft","rightButton","tabScrollHandler","scrollWidth","INITIAL_SCALE","INITIAL_SIZE","INITIAL_OPACITY","FINAL_OPACITY","FINAL_SCALE","RIPPLE_EFFECT_IGNORE_EVENTS","downHandler_","rippleElement_","type","ignoringMouseDown_","frameCount","getFrameCount","setFrameCount","x","y","bound","currentTarget","clientX","clientY","round","touches","setRippleXY","setRippleStyles","animFrameHandler","upHandler_","detail","recentering","frameCount_","rippleSize_","x_","y_","sqrt","fC","getRippleElement","newX","newY","transformString","scale","size","offset","webkitTransform","msTransform","transform"],"mappings":"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","file":"material.min.js","sourcesContent":["/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Animation MDL component.\n * Implements MDL component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction DemoAnimation(element) {\n  'use strict';\n\n  this.element_ = element;\n  this.position_ = this.Constant_.STARTING_POSITION;\n  this.movable_ = this.element_.querySelector('.' + this.CssClasses_.MOVABLE);\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nDemoAnimation.prototype.Constant_ = {\n  STARTING_POSITION: 1\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nDemoAnimation.prototype.CssClasses_ = {\n  MOVABLE: 'demo-animation__movable',\n  POSITION_PREFIX: 'demo-animation--position-'\n};\n\n/**\n * Handle click of element.\n * @param {Event} event The event that fired.\n * @private\n */\nDemoAnimation.prototype.handleClick_ = function(event) {\n  'use strict';\n\n  this.movable_.classList.remove(this.CssClasses_.POSITION_PREFIX +\n      this.position_);\n  this.position_++;\n  if (this.position_ > 6) {\n    this.position_ = 1;\n  }\n  this.movable_.classList.add(this.CssClasses_.POSITION_PREFIX +\n      this.position_);\n};\n\n/**\n * Initialize element.\n */\nDemoAnimation.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    if (!this.movable_) {\n      console.error('Was expecting to find an element with class name ' +\n          this.CssClasses_.MOVABLE + ' inside of: ', this.element_);\n      return;\n    }\n\n    this.element_.addEventListener('click', this.handleClick_.bind(this));\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: DemoAnimation,\n  classAsString: 'DemoAnimation',\n  cssClass: 'demo-js-animation'\n});\n","/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Button MDL component.\n * Implements MDL component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialButton(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialButton.prototype.Constant_ = {\n  // None for now.\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialButton.prototype.CssClasses_ = {\n  RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n  RIPPLE_CONTAINER: 'mdl-button__ripple-container',\n  RIPPLE: 'mdl-ripple'\n};\n\n/**\n * Handle blur of element.\n * @param {HTMLElement} element The instance of a button we want to blur.\n * @private\n */\nMaterialButton.prototype.blurHandler = function(event) {\n  'use strict';\n\n  if (event) {\n    this.element_.blur();\n  }\n};\n\n// Public methods.\n\n/**\n * Disable button.\n * @public\n */\nMaterialButton.prototype.disable = function() {\n  'use strict';\n\n  this.element_.disabled = true;\n};\n\n/**\n * Enable button.\n * @public\n */\nMaterialButton.prototype.enable = function() {\n  'use strict';\n\n  this.element_.disabled = false;\n};\n\n/**\n * Initialize element.\n */\nMaterialButton.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n      var rippleContainer = document.createElement('span');\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n      var ripple = document.createElement('span');\n      ripple.classList.add(this.CssClasses_.RIPPLE);\n      rippleContainer.appendChild(ripple);\n      ripple.addEventListener('mouseup', this.blurHandler.bind(this));\n      this.element_.appendChild(rippleContainer);\n    }\n    this.element_.addEventListener('mouseup', this.blurHandler.bind(this));\n    this.element_.addEventListener('mouseleave', this.blurHandler.bind(this));\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialButton,\n  classAsString: 'MaterialButton',\n  cssClass: 'mdl-js-button'\n});\n","/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Checkbox MDL component.\n * Implements MDL component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialCheckbox(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialCheckbox.prototype.Constant_ = {\n  TINY_TIMEOUT: 0.001\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialCheckbox.prototype.CssClasses_ = {\n  INPUT: 'mdl-checkbox__input',\n  BOX_OUTLINE: 'mdl-checkbox__box-outline',\n  FOCUS_HELPER: 'mdl-checkbox__focus-helper',\n  TICK_OUTLINE: 'mdl-checkbox__tick-outline',\n  RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n  RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n  RIPPLE_CONTAINER: 'mdl-checkbox__ripple-container',\n  RIPPLE_CENTER: 'mdl-ripple--center',\n  RIPPLE: 'mdl-ripple',\n  IS_FOCUSED: 'is-focused',\n  IS_DISABLED: 'is-disabled',\n  IS_CHECKED: 'is-checked',\n  IS_UPGRADED: 'is-upgraded'\n};\n\n/**\n * Handle change of state.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialCheckbox.prototype.onChange_ = function(event) {\n  'use strict';\n\n  this.updateClasses_();\n};\n\n/**\n * Handle focus of element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialCheckbox.prototype.onFocus_ = function(event) {\n  'use strict';\n\n  this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n\n/**\n * Handle lost focus of element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialCheckbox.prototype.onBlur_ = function(event) {\n  'use strict';\n\n  this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n\n/**\n * Handle mouseup.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialCheckbox.prototype.onMouseUp_ = function(event) {\n  'use strict';\n\n  this.blur_();\n};\n\n/**\n * Handle class updates.\n * @param {HTMLElement} button The button whose classes we should update.\n * @param {HTMLElement} label The label whose classes we should update.\n * @private\n */\nMaterialCheckbox.prototype.updateClasses_ = function() {\n  'use strict';\n\n  if (this.inputElement_.disabled) {\n    this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n  } else {\n    this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n  }\n\n  if (this.inputElement_.checked) {\n    this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n  } else {\n    this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n  }\n};\n\n/**\n * Add blur.\n * @private\n */\nMaterialCheckbox.prototype.blur_ = function(event) {\n  'use strict';\n\n  // TODO: figure out why there's a focus event being fired after our blur,\n  // so that we can avoid this hack.\n  window.setTimeout(function() {\n    this.inputElement_.blur();\n  }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n\n// Public methods.\n\n/**\n * Disable checkbox.\n * @public\n */\nMaterialCheckbox.prototype.disable = function() {\n  'use strict';\n\n  this.inputElement_.disabled = true;\n  this.updateClasses_();\n};\n\n/**\n * Enable checkbox.\n * @public\n */\nMaterialCheckbox.prototype.enable = function() {\n  'use strict';\n\n  this.inputElement_.disabled = false;\n  this.updateClasses_();\n};\n\n/**\n * Check checkbox.\n * @public\n */\nMaterialCheckbox.prototype.check = function() {\n  'use strict';\n\n  this.inputElement_.checked = true;\n  this.updateClasses_();\n};\n\n/**\n * Uncheck checkbox.\n * @public\n */\nMaterialCheckbox.prototype.uncheck = function() {\n  'use strict';\n\n  this.inputElement_.checked = false;\n  this.updateClasses_();\n};\n\n/**\n * Initialize element.\n */\nMaterialCheckbox.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    this.inputElement_ = this.element_.querySelector('.' +\n        this.CssClasses_.INPUT);\n\n    var boxOutline = document.createElement('span');\n    boxOutline.classList.add(this.CssClasses_.BOX_OUTLINE);\n\n    var tickContainer = document.createElement('span');\n    tickContainer.classList.add(this.CssClasses_.FOCUS_HELPER);\n\n    var tickOutline = document.createElement('span');\n    tickOutline.classList.add(this.CssClasses_.TICK_OUTLINE);\n\n    boxOutline.appendChild(tickOutline);\n\n    this.element_.appendChild(tickContainer);\n    this.element_.appendChild(boxOutline);\n\n    var rippleContainer;\n    if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n      this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n      rippleContainer = document.createElement('span');\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_CENTER);\n      rippleContainer.addEventListener('mouseup', this.onMouseUp_.bind(this));\n\n      var ripple = document.createElement('span');\n      ripple.classList.add(this.CssClasses_.RIPPLE);\n\n      rippleContainer.appendChild(ripple);\n      this.element_.appendChild(rippleContainer);\n    }\n\n    this.inputElement_.addEventListener('change', this.onChange_.bind(this));\n    this.inputElement_.addEventListener('focus', this.onFocus_.bind(this));\n    this.inputElement_.addEventListener('blur', this.onBlur_.bind(this));\n    this.element_.addEventListener('mouseup', this.onMouseUp_.bind(this));\n\n    this.updateClasses_();\n    this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialCheckbox,\n  classAsString: 'MaterialCheckbox',\n  cssClass: 'mdl-js-checkbox'\n});\n","/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for icon toggle MDL component.\n * Implements MDL component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialIconToggle(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialIconToggle.prototype.Constant_ = {\n  TINY_TIMEOUT: 0.001\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialIconToggle.prototype.CssClasses_ = {\n  INPUT: 'mdl-icon-toggle__input',\n  JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n  RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n  RIPPLE_CONTAINER: 'mdl-icon-toggle__ripple-container',\n  RIPPLE_CENTER: 'mdl-ripple--center',\n  RIPPLE: 'mdl-ripple',\n  IS_FOCUSED: 'is-focused',\n  IS_DISABLED: 'is-disabled',\n  IS_CHECKED: 'is-checked'\n};\n\n/**\n * Handle change of state.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialIconToggle.prototype.onChange_ = function(event) {\n  'use strict';\n\n  this.updateClasses_();\n};\n\n/**\n * Handle focus of element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialIconToggle.prototype.onFocus_ = function(event) {\n  'use strict';\n\n  this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n\n/**\n * Handle lost focus of element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialIconToggle.prototype.onBlur_ = function(event) {\n  'use strict';\n\n  this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n\n/**\n * Handle mouseup.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialIconToggle.prototype.onMouseUp_ = function(event) {\n  'use strict';\n\n  this.blur_();\n};\n\n/**\n * Handle class updates.\n * @param {HTMLElement} button The button whose classes we should update.\n * @param {HTMLElement} label The label whose classes we should update.\n * @private\n */\nMaterialIconToggle.prototype.updateClasses_ = function() {\n  'use strict';\n\n  if (this.inputElement_.disabled) {\n    this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n  } else {\n    this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n  }\n\n  if (this.inputElement_.checked) {\n    this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n  } else {\n    this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n  }\n};\n\n/**\n * Add blur.\n * @private\n */\nMaterialIconToggle.prototype.blur_ = function(event) {\n  'use strict';\n\n  // TODO: figure out why there's a focus event being fired after our blur,\n  // so that we can avoid this hack.\n  window.setTimeout(function() {\n    this.inputElement_.blur();\n  }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n\n// Public methods.\n\n/**\n * Disable icon toggle.\n * @public\n */\nMaterialIconToggle.prototype.disable = function() {\n  'use strict';\n\n  this.inputElement_.disabled = true;\n  this.updateClasses_();\n};\n\n/**\n * Enable icon toggle.\n * @public\n */\nMaterialIconToggle.prototype.enable = function() {\n  'use strict';\n\n  this.inputElement_.disabled = false;\n  this.updateClasses_();\n};\n\n/**\n * Check icon toggle.\n * @public\n */\nMaterialIconToggle.prototype.check = function() {\n  'use strict';\n\n  this.inputElement_.checked = true;\n  this.updateClasses_();\n};\n\n/**\n * Uncheck icon toggle.\n * @public\n */\nMaterialIconToggle.prototype.uncheck = function() {\n  'use strict';\n\n  this.inputElement_.checked = false;\n  this.updateClasses_();\n};\n\n/**\n * Initialize element.\n */\nMaterialIconToggle.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    this.inputElement_ =\n        this.element_.querySelector('.' + this.CssClasses_.INPUT);\n\n    var rippleContainer;\n    if (this.element_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {\n      this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n      rippleContainer = document.createElement('span');\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n      rippleContainer.classList.add(this.CssClasses_.JS_RIPPLE_EFFECT);\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_CENTER);\n      rippleContainer.addEventListener('mouseup', this.onMouseUp_.bind(this));\n\n      var ripple = document.createElement('span');\n      ripple.classList.add(this.CssClasses_.RIPPLE);\n\n      rippleContainer.appendChild(ripple);\n      this.element_.appendChild(rippleContainer);\n    }\n\n    this.inputElement_.addEventListener('change', this.onChange_.bind(this));\n    this.inputElement_.addEventListener('focus', this.onFocus_.bind(this));\n    this.inputElement_.addEventListener('blur', this.onBlur_.bind(this));\n    this.element_.addEventListener('mouseup', this.onMouseUp_.bind(this));\n\n    this.updateClasses_();\n    this.element_.classList.add('is-upgraded');\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialIconToggle,\n  classAsString: 'MaterialIconToggle',\n  cssClass: 'mdl-js-icon-toggle'\n});\n","/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for dropdown MDL component.\n * Implements MDL component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialMenu(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialMenu.prototype.Constant_ = {\n  // Total duration of the menu animation.\n  TRANSITION_DURATION_SECONDS: 0.3,\n  // The fraction of the total duration we want to use for menu item animations.\n  TRANSITION_DURATION_FRACTION: 0.8,\n  // How long the menu stays open after choosing an option (so the user can see\n  // the ripple).\n  CLOSE_TIMEOUT: 150\n};\n\n/**\n * Keycodes, for code readability.\n * @enum {number}\n * @private\n */\nMaterialMenu.prototype.Keycodes_ = {\n  ENTER: 13,\n  ESCAPE: 27,\n  SPACE: 32,\n  UP_ARROW: 38,\n  DOWN_ARROW: 40\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialMenu.prototype.CssClasses_ = {\n  CONTAINER: 'mdl-menu__container',\n  OUTLINE: 'mdl-menu__outline',\n  ITEM: 'mdl-menu__item',\n  ITEM_RIPPLE_CONTAINER: 'mdl-menu__item-ripple-container',\n  RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n  RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n  RIPPLE: 'mdl-ripple',\n  // Statuses\n  IS_UPGRADED: 'is-upgraded',\n  IS_VISIBLE: 'is-visible',\n  IS_ANIMATING: 'is-animating',\n  // Alignment options\n  BOTTOM_LEFT: 'mdl-menu--bottom-left',  // This is the default.\n  BOTTOM_RIGHT: 'mdl-menu--bottom-right',\n  TOP_LEFT: 'mdl-menu--top-left',\n  TOP_RIGHT: 'mdl-menu--top-right',\n  UNALIGNED: 'mdl-menu--unaligned'\n};\n\n/**\n * Initialize element.\n */\nMaterialMenu.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    // Create container for the menu.\n    var container = document.createElement('div');\n    container.classList.add(this.CssClasses_.CONTAINER);\n    this.element_.parentElement.insertBefore(container, this.element_);\n    this.element_.parentElement.removeChild(this.element_);\n    container.appendChild(this.element_);\n    this.container_ = container;\n\n    // Create outline for the menu (shadow and background).\n    var outline = document.createElement('div');\n    outline.classList.add(this.CssClasses_.OUTLINE);\n    this.outline_ = outline;\n    container.insertBefore(outline, this.element_);\n\n    // Find the \"for\" element and bind events to it.\n    var forElId = this.element_.getAttribute('for');\n    var forEl = null;\n    if (forElId) {\n      forEl = document.getElementById(forElId);\n      if (forEl) {\n        this.forElement_ = forEl;\n        forEl.addEventListener('click', this.handleForClick_.bind(this));\n        forEl.addEventListener('keydown',\n            this.handleForKeyboardEvent_.bind(this));\n      }\n    }\n\n    var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n\n    for (var i = 0; i < items.length; i++) {\n      // Add a listener to each menu item.\n      items[i].addEventListener('click', this.handleItemClick_.bind(this));\n      // Add a tab index to each menu item.\n      items[i].tabIndex = '-1';\n      // Add a keyboard listener to each menu item.\n      items[i].addEventListener('keydown',\n          this.handleItemKeyboardEvent_.bind(this));\n    }\n\n    // Add ripple classes to each item, if the user has enabled ripples.\n    if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n      this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n\n      for (i = 0; i < items.length; i++) {\n        var item = items[i];\n\n        var rippleContainer = document.createElement('span');\n        rippleContainer.classList.add(this.CssClasses_.ITEM_RIPPLE_CONTAINER);\n\n        var ripple = document.createElement('span');\n        ripple.classList.add(this.CssClasses_.RIPPLE);\n        rippleContainer.appendChild(ripple);\n\n        item.appendChild(rippleContainer);\n        item.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n      }\n    }\n\n    // Copy alignment classes to the container, so the outline can use them.\n    if (this.element_.classList.contains(this.CssClasses_.BOTTOM_LEFT)) {\n      this.outline_.classList.add(this.CssClasses_.BOTTOM_LEFT);\n    }\n    if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n      this.outline_.classList.add(this.CssClasses_.BOTTOM_RIGHT);\n    }\n    if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n      this.outline_.classList.add(this.CssClasses_.TOP_LEFT);\n    }\n    if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n      this.outline_.classList.add(this.CssClasses_.TOP_RIGHT);\n    }\n    if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n      this.outline_.classList.add(this.CssClasses_.UNALIGNED);\n    }\n\n    container.classList.add(this.CssClasses_.IS_UPGRADED);\n  }\n};\n\n/**\n * Handles a click on the \"for\" element, by positioning the menu and then\n * toggling it.\n * @private\n */\nMaterialMenu.prototype.handleForClick_ = function(evt) {\n  'use strict';\n\n  if (this.element_ && this.forElement_) {\n    var rect = this.forElement_.getBoundingClientRect();\n    var forRect = this.forElement_.parentElement.getBoundingClientRect();\n\n    if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n      // Do not position the menu automatically. Requires the developer to\n      // manually specify position.\n    } else if (this.element_.classList.contains(\n        this.CssClasses_.BOTTOM_RIGHT)) {\n      // Position below the \"for\" element, aligned to its right.\n      this.container_.style.right = (forRect.right - rect.right) + 'px';\n      this.container_.style.top =\n          this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';\n    } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n      // Position above the \"for\" element, aligned to its left.\n      this.container_.style.left = this.forElement_.offsetLeft + 'px';\n      this.container_.style.bottom = (forRect.bottom - rect.top) + 'px';\n    } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n      // Position above the \"for\" element, aligned to its right.\n      this.container_.style.right = (forRect.right - rect.right) + 'px';\n      this.container_.style.bottom = (forRect.bottom - rect.top) + 'px';\n    } else {\n      // Default: position below the \"for\" element, aligned to its left.\n      this.container_.style.left = this.forElement_.offsetLeft + 'px';\n      this.container_.style.top =\n          this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';\n    }\n  }\n\n  this.toggle(evt);\n};\n\n/**\n * Handles a keyboard event on the \"for\" element.\n * @private\n */\nMaterialMenu.prototype.handleForKeyboardEvent_ = function(evt) {\n  'use strict';\n\n  if (this.element_ && this.container_ && this.forElement_) {\n    var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM +\n      ':not([disabled])');\n\n    if (items && items.length > 0 &&\n        this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n      if (evt.keyCode === this.Keycodes_.UP_ARROW) {\n        evt.preventDefault();\n        items[items.length - 1].focus();\n      } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {\n        evt.preventDefault();\n        items[0].focus();\n      }\n    }\n  }\n};\n\n/**\n * Handles a keyboard event on an item.\n * @private\n */\nMaterialMenu.prototype.handleItemKeyboardEvent_ = function(evt) {\n  'use strict';\n\n  if (this.element_ && this.container_) {\n    var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM +\n      ':not([disabled])');\n\n    if (items && items.length > 0 &&\n        this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n      var currentIndex = Array.prototype.slice.call(items).indexOf(evt.target);\n\n      if (evt.keyCode === this.Keycodes_.UP_ARROW) {\n        evt.preventDefault();\n        if (currentIndex > 0) {\n          items[currentIndex - 1].focus();\n        } else {\n          items[items.length - 1].focus();\n        }\n      } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {\n        evt.preventDefault();\n        if (items.length > currentIndex + 1) {\n          items[currentIndex + 1].focus();\n        } else {\n          items[0].focus();\n        }\n      } else if (evt.keyCode === this.Keycodes_.SPACE ||\n            evt.keyCode === this.Keycodes_.ENTER) {\n        evt.preventDefault();\n        // Send mousedown and mouseup to trigger ripple.\n        var e = new MouseEvent('mousedown');\n        evt.target.dispatchEvent(e);\n        e = new MouseEvent('mouseup');\n        evt.target.dispatchEvent(e);\n        // Send click.\n        evt.target.click();\n      } else if (evt.keyCode === this.Keycodes_.ESCAPE) {\n        evt.preventDefault();\n        this.hide();\n      }\n    }\n  }\n};\n\n/**\n * Handles a click event on an item.\n * @private\n */\nMaterialMenu.prototype.handleItemClick_ = function(evt) {\n  'use strict';\n\n  if (evt.target.getAttribute('disabled') !== null) {\n    evt.stopPropagation();\n  } else {\n    // Wait some time before closing menu, so the user can see the ripple.\n    this.closing_ = true;\n    window.setTimeout(function(evt) {\n      this.hide();\n      this.closing_ = false;\n    }.bind(this), this.Constant_.CLOSE_TIMEOUT);\n  }\n};\n\n/**\n * Calculates the initial clip (for opening the menu) or final clip (for closing\n * it), and applies it. This allows us to animate from or to the correct point,\n * that is, the point it's aligned to in the \"for\" element.\n * @private\n */\nMaterialMenu.prototype.applyClip_ = function(height, width) {\n  'use strict';\n\n  if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n    // Do not clip.\n    this.element_.style.clip = null;\n  } else if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n    // Clip to the top right corner of the menu.\n    this.element_.style.clip =\n        'rect(0 ' + width + 'px ' + '0 ' + width + 'px)';\n  } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n    // Clip to the bottom left corner of the menu.\n    this.element_.style.clip =\n        'rect(' + height + 'px 0 ' + height + 'px 0)';\n  } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n    // Clip to the bottom right corner of the menu.\n    this.element_.style.clip = 'rect(' + height + 'px ' + width + 'px ' +\n        height + 'px ' + width + 'px)';\n  } else {\n    // Default: do not clip (same as clipping to the top left corner).\n    this.element_.style.clip = null;\n  }\n};\n\n/**\n * Adds an event listener to clean up after the animation ends.\n * @private\n */\nMaterialMenu.prototype.addAnimationEndListener_ = function() {\n  'use strict';\n\n  var cleanup = function() {\n    this.element_.classList.remove(this.CssClasses_.IS_ANIMATING);\n  }.bind(this);\n\n  // Remove animation class once the transition is done.\n  this.element_.addEventListener('transitionend', cleanup);\n  this.element_.addEventListener('webkitTransitionEnd', cleanup);\n};\n\n/**\n * Displays the menu.\n * @public\n */\nMaterialMenu.prototype.show = function(evt) {\n  'use strict';\n\n  if (this.element_ && this.container_ && this.outline_) {\n    // Measure the inner element.\n    var height = this.element_.getBoundingClientRect().height;\n    var width = this.element_.getBoundingClientRect().width;\n\n    // Apply the inner element's size to the container and outline.\n    this.container_.style.width = width + 'px';\n    this.container_.style.height = height + 'px';\n    this.outline_.style.width = width + 'px';\n    this.outline_.style.height = height + 'px';\n\n    var transitionDuration = this.Constant_.TRANSITION_DURATION_SECONDS *\n        this.Constant_.TRANSITION_DURATION_FRACTION;\n\n    // Calculate transition delays for individual menu items, so that they fade\n    // in one at a time.\n    var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n    for (var i = 0; i < items.length; i++) {\n      var itemDelay = null;\n      if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT) ||\n          this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n        itemDelay = ((height - items[i].offsetTop - items[i].offsetHeight) /\n            height * transitionDuration) + 's';\n      } else {\n        itemDelay = (items[i].offsetTop / height * transitionDuration) + 's';\n      }\n      items[i].style.transitionDelay = itemDelay;\n    }\n\n    // Apply the initial clip to the text before we start animating.\n    this.applyClip_(height, width);\n\n    // Wait for the next frame, turn on animation, and apply the final clip.\n    // Also make it visible. This triggers the transitions.\n    window.requestAnimationFrame(function() {\n      this.element_.classList.add(this.CssClasses_.IS_ANIMATING);\n      this.element_.style.clip = 'rect(0 ' + width + 'px ' + height + 'px 0)';\n      this.container_.classList.add(this.CssClasses_.IS_VISIBLE);\n    }.bind(this));\n\n    // Clean up after the animation is complete.\n    this.addAnimationEndListener_();\n\n    // Add a click listener to the document, to close the menu.\n    var callback = function(e) {\n      // Check to see if the document is processing the same event that\n      // displayed the menu in the first place. If so, do nothing.\n      // Also check to see if the menu is in the process of closing itself, and\n      // do nothing in that case.\n      if (e !== evt && !this.closing_) {\n        document.removeEventListener('click', callback);\n        this.hide();\n      }\n    }.bind(this);\n    document.addEventListener('click', callback);\n  }\n};\n\n/**\n * Hides the menu.\n * @public\n */\nMaterialMenu.prototype.hide = function() {\n  'use strict';\n\n  if (this.element_ && this.container_ && this.outline_) {\n    var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n\n    // Remove all transition delays; menu items fade out concurrently.\n    for (var i = 0; i < items.length; i++) {\n      items[i].style.transitionDelay = null;\n    }\n\n    // Measure the inner element.\n    var height = this.element_.getBoundingClientRect().height;\n    var width = this.element_.getBoundingClientRect().width;\n\n    // Turn on animation, and apply the final clip. Also make invisible.\n    // This triggers the transitions.\n    this.element_.classList.add(this.CssClasses_.IS_ANIMATING);\n    this.applyClip_(height, width);\n    this.container_.classList.remove(this.CssClasses_.IS_VISIBLE);\n\n    // Clean up after the animation is complete.\n    this.addAnimationEndListener_();\n  }\n};\n\n/**\n * Displays or hides the menu, depending on current state.\n * @public\n */\nMaterialMenu.prototype.toggle = function(evt) {\n  'use strict';\n\n  if (this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n    this.hide();\n  } else {\n    this.show(evt);\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialMenu,\n  classAsString: 'MaterialMenu',\n  cssClass: 'mdl-js-menu'\n});\n","/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Progress MDL component.\n * Implements MDL component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialProgress(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialProgress.prototype.Constant_ = {\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialProgress.prototype.CssClasses_ = {\n  INDETERMINATE_CLASS: 'mdl-progress__indeterminate'\n};\n\nMaterialProgress.prototype.setProgress = function(p) {\n  'use strict';\n\n  if (this.element_.classList.contains(this.CssClasses_.INDETERMINATE_CLASS)) {\n    return;\n  }\n\n  this.progressbar_.style.width = p + '%';\n};\n\nMaterialProgress.prototype.setBuffer = function(p) {\n  'use strict';\n\n  this.bufferbar_.style.width = p + '%';\n  this.auxbar_.style.width = (100-p) + '%';\n};\n\n/**\n * Initialize element.\n */\nMaterialProgress.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    var el = document.createElement('div');\n    el.className = 'progressbar bar bar1';\n    this.element_.appendChild(el);\n    this.progressbar_ = el;\n\n    el = document.createElement('div');\n    el.className = 'bufferbar bar bar2';\n    this.element_.appendChild(el);\n    this.bufferbar_ = el;\n\n    el = document.createElement('div');\n    el.className = 'auxbar bar bar3';\n    this.element_.appendChild(el);\n    this.auxbar_ = el;\n\n    this.progressbar_.style.width = '0%';\n    this.bufferbar_.style.width = '100%';\n    this.auxbar_.style.width = '0%';\n\n    this.element_.classList.add('is-upgraded');\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialProgress,\n  classAsString: 'MaterialProgress',\n  cssClass: 'mdl-js-progress'\n});\n","/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Radio MDL component.\n * Implements MDL component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialRadio(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialRadio.prototype.Constant_ = {\n  TINY_TIMEOUT: 0.001\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialRadio.prototype.CssClasses_ = {\n  IS_FOCUSED: 'is-focused',\n  IS_DISABLED: 'is-disabled',\n  IS_CHECKED: 'is-checked',\n  IS_UPGRADED: 'is-upgraded',\n  JS_RADIO: 'mdl-js-radio',\n  RADIO_BTN: 'mdl-radio__button',\n  RADIO_OUTER_CIRCLE: 'mdl-radio__outer-circle',\n  RADIO_INNER_CIRCLE: 'mdl-radio__inner-circle',\n  RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n  RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n  RIPPLE_CONTAINER: 'mdl-radio__ripple-container',\n  RIPPLE_CENTER: 'mdl-ripple--center',\n  RIPPLE: 'mdl-ripple'\n};\n\n/**\n * Handle change of state.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialRadio.prototype.onChange_ = function(event) {\n  'use strict';\n\n  this.updateClasses_(this.btnElement_, this.element_);\n\n  // Since other radio buttons don't get change events, we need to look for\n  // them to update their classes.\n  var radios = document.getElementsByClassName(this.CssClasses_.JS_RADIO);\n  for (var i = 0; i < radios.length; i++) {\n    var button = radios[i].querySelector('.' + this.CssClasses_.RADIO_BTN);\n    // Different name == different group, so no point updating those.\n    if (button.getAttribute('name') === this.btnElement_.getAttribute('name')) {\n      this.updateClasses_(button, radios[i]);\n    }\n  }\n};\n\n/**\n * Handle focus.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialRadio.prototype.onFocus_ = function(event) {\n  'use strict';\n\n  this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n\n/**\n * Handle lost focus.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialRadio.prototype.onBlur_ = function(event) {\n  'use strict';\n\n  this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n\n/**\n * Handle mouseup.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialRadio.prototype.onMouseup_ = function(event) {\n  'use strict';\n\n  this.blur_();\n};\n\n/**\n * Update classes.\n * @param {HTMLElement} button The button whose classes we should update.\n * @param {HTMLElement} label The label whose classes we should update.\n * @private\n */\nMaterialRadio.prototype.updateClasses_ = function(button, label) {\n  'use strict';\n\n  if (button.disabled) {\n    label.classList.add(this.CssClasses_.IS_DISABLED);\n  } else {\n    label.classList.remove(this.CssClasses_.IS_DISABLED);\n  }\n\n  if (button.checked) {\n    label.classList.add(this.CssClasses_.IS_CHECKED);\n  } else {\n    label.classList.remove(this.CssClasses_.IS_CHECKED);\n  }\n};\n\n/**\n * Add blur.\n * @private\n */\nMaterialRadio.prototype.blur_ = function(event) {\n  'use strict';\n\n  // TODO: figure out why there's a focus event being fired after our blur,\n  // so that we can avoid this hack.\n  window.setTimeout(function() {\n    this.btnElement_.blur();\n  }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n\n// Public methods.\n\n/**\n * Disable radio.\n * @public\n */\nMaterialRadio.prototype.disable = function() {\n  'use strict';\n\n  this.btnElement_.disabled = true;\n  this.updateClasses_(this.btnElement_, this.element_);\n};\n\n/**\n * Enable radio.\n * @public\n */\nMaterialRadio.prototype.enable = function() {\n  'use strict';\n\n  this.btnElement_.disabled = false;\n  this.updateClasses_(this.btnElement_, this.element_);\n};\n\n/**\n * Check radio.\n * @public\n */\nMaterialRadio.prototype.check = function() {\n  'use strict';\n\n  this.btnElement_.checked = true;\n  this.updateClasses_(this.btnElement_, this.element_);\n};\n\n/**\n * Uncheck radio.\n * @public\n */\nMaterialRadio.prototype.uncheck = function() {\n  'use strict';\n\n  this.btnElement_.checked = false;\n  this.updateClasses_(this.btnElement_, this.element_);\n};\n\n/**\n * Initialize element.\n */\nMaterialRadio.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    this.btnElement_ = this.element_.querySelector('.' +\n        this.CssClasses_.RADIO_BTN);\n\n    var outerCircle = document.createElement('span');\n    outerCircle.classList.add(this.CssClasses_.RADIO_OUTER_CIRCLE);\n\n    var innerCircle = document.createElement('span');\n    innerCircle.classList.add(this.CssClasses_.RADIO_INNER_CIRCLE);\n\n    this.element_.appendChild(outerCircle);\n    this.element_.appendChild(innerCircle);\n\n    var rippleContainer;\n    if (this.element_.classList.contains(\n        this.CssClasses_.RIPPLE_EFFECT)) {\n      this.element_.classList.add(\n          this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n      rippleContainer = document.createElement('span');\n      rippleContainer.classList.add(\n          this.CssClasses_.RIPPLE_CONTAINER);\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_CENTER);\n      rippleContainer.addEventListener('mouseup', this.onMouseup_.bind(this));\n\n      var ripple = document.createElement('span');\n      ripple.classList.add(this.CssClasses_.RIPPLE);\n\n      rippleContainer.appendChild(ripple);\n      this.element_.appendChild(rippleContainer);\n    }\n\n    this.btnElement_.addEventListener('change', this.onChange_.bind(this));\n    this.btnElement_.addEventListener('focus', this.onFocus_.bind(this));\n    this.btnElement_.addEventListener('blur', this.onBlur_.bind(this));\n    this.element_.addEventListener('mouseup', this.onMouseup_.bind(this));\n\n    this.updateClasses_(this.btnElement_, this.element_);\n    this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialRadio,\n  classAsString: 'MaterialRadio',\n  cssClass: 'mdl-js-radio'\n});\n","/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Slider MDL component.\n * Implements MDL component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialSlider(element) {\n  'use strict';\n\n  this.element_ = element;\n  // Browser feature detection.\n  this.isIE_ = window.navigator.msPointerEnabled;\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialSlider.prototype.Constant_ = {\n  // None for now.\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialSlider.prototype.CssClasses_ = {\n  IE_CONTAINER: 'mdl-slider__ie-container',\n  SLIDER_CONTAINER: 'mdl-slider__container',\n  BACKGROUND_FLEX: 'mdl-slider__background-flex',\n  BACKGROUND_LOWER: 'mdl-slider__background-lower',\n  BACKGROUND_UPPER: 'mdl-slider__background-upper',\n  IS_LOWEST_VALUE: 'is-lowest-value',\n  IS_UPGRADED: 'is-upgraded'\n};\n\n/**\n * Handle input on element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialSlider.prototype.onInput_ = function(event) {\n  'use strict';\n\n  this.updateValueStyles_();\n};\n\n/**\n * Handle change on element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialSlider.prototype.onChange_ = function(event) {\n  'use strict';\n\n  this.updateValueStyles_();\n};\n\n/**\n * Handle mouseup on element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialSlider.prototype.onMouseUp_ = function(event) {\n  'use strict';\n\n  event.target.blur();\n};\n\n/**\n * Handle updating of values.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialSlider.prototype.updateValueStyles_ = function(event) {\n  'use strict';\n\n  // Calculate and apply percentages to div structure behind slider.\n  var fraction = (this.element_.value - this.element_.min) /\n      (this.element_.max - this.element_.min);\n\n  if (fraction === 0) {\n    this.element_.classList.add(this.CssClasses_.IS_LOWEST_VALUE);\n  } else {\n    this.element_.classList.remove(this.CssClasses_.IS_LOWEST_VALUE);\n  }\n\n  if (!this.isIE_) {\n    this.backgroundLower_.style.flex = fraction;\n    this.backgroundLower_.style.webkitFlex = fraction;\n    this.backgroundUpper_.style.flex = 1 - fraction;\n    this.backgroundUpper_.style.webkitFlex = 1 - fraction;\n  }\n};\n\n// Public methods.\n\n/**\n * Disable slider.\n * @public\n */\nMaterialSlider.prototype.disable = function() {\n  'use strict';\n\n  this.element_.disabled = true;\n};\n\n/**\n * Enable slider.\n * @public\n */\nMaterialSlider.prototype.enable = function() {\n  'use strict';\n\n  this.element_.disabled = false;\n};\n\n/**\n * Update slider value.\n * @param {Number} value The value to which to set the control (optional).\n * @public\n */\nMaterialSlider.prototype.change = function(value) {\n  'use strict';\n\n  if (value) {\n    this.element_.value = value;\n  }\n  this.updateValueStyles_();\n};\n\n/**\n * Initialize element.\n */\nMaterialSlider.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    if (this.isIE_) {\n      // Since we need to specify a very large height in IE due to\n      // implementation limitations, we add a parent here that trims it down to\n      // a reasonable size.\n      var containerIE = document.createElement('div');\n      containerIE.classList.add(this.CssClasses_.IE_CONTAINER);\n      this.element_.parentElement.insertBefore(containerIE, this.element_);\n      this.element_.parentElement.removeChild(this.element_);\n      containerIE.appendChild(this.element_);\n    } else {\n      // For non-IE browsers, we need a div structure that sits behind the\n      // slider and allows us to style the left and right sides of it with\n      // different colors.\n      var container = document.createElement('div');\n      container.classList.add(this.CssClasses_.SLIDER_CONTAINER);\n      this.element_.parentElement.insertBefore(container, this.element_);\n      this.element_.parentElement.removeChild(this.element_);\n      container.appendChild(this.element_);\n      var backgroundFlex = document.createElement('div');\n      backgroundFlex.classList.add(this.CssClasses_.BACKGROUND_FLEX);\n      container.appendChild(backgroundFlex);\n      this.backgroundLower_ = document.createElement('div');\n      this.backgroundLower_.classList.add(this.CssClasses_.BACKGROUND_LOWER);\n      backgroundFlex.appendChild(this.backgroundLower_);\n      this.backgroundUpper_ = document.createElement('div');\n      this.backgroundUpper_.classList.add(this.CssClasses_.BACKGROUND_UPPER);\n      backgroundFlex.appendChild(this.backgroundUpper_);\n    }\n\n    this.element_.addEventListener('input', this.onInput_.bind(this));\n    this.element_.addEventListener('change', this.onChange_.bind(this));\n    this.element_.addEventListener('mouseup', this.onMouseUp_.bind(this));\n\n    this.updateValueStyles_();\n    this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialSlider,\n  classAsString: 'MaterialSlider',\n  cssClass: 'mdl-js-slider'\n});\n","/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Spinner MDL component.\n * Implements MDL component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialSpinner(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialSpinner.prototype.Constant_ = {\n  MDL_SPINNER_LAYER_COUNT: 4\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialSpinner.prototype.CssClasses_ = {\n  MDL_SPINNER_LAYER: 'mdl-spinner__layer',\n  MDL_SPINNER_CIRCLE_CLIPPER: 'mdl-spinner__circle-clipper',\n  MDL_SPINNER_CIRCLE: 'mdl-spinner__circle',\n  MDL_SPINNER_GAP_PATCH: 'mdl-spinner__gap-patch',\n  MDL_SPINNER_LEFT: 'mdl-spinner__left',\n  MDL_SPINNER_RIGHT: 'mdl-spinner__right'\n};\n\n/**\n* Auxiliary method to create a spinner layer.\n*/\nMaterialSpinner.prototype.createLayer = function(index) {\n  'use strict';\n\n  var layer = document.createElement('div');\n  layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER);\n  layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER + '-' + index);\n\n  var leftClipper = document.createElement('div');\n  leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);\n  leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_LEFT);\n\n  var gapPatch = document.createElement('div');\n  gapPatch.classList.add(this.CssClasses_.MDL_SPINNER_GAP_PATCH);\n\n  var rightClipper = document.createElement('div');\n  rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);\n  rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_RIGHT);\n\n  var circleOwners = [leftClipper, gapPatch, rightClipper];\n\n  for (var i = 0; i < circleOwners.length; i++) {\n    var circle = document.createElement('div');\n    circle.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE);\n    circleOwners[i].appendChild(circle);\n  }\n\n  layer.appendChild(leftClipper);\n  layer.appendChild(gapPatch);\n  layer.appendChild(rightClipper);\n\n  this.element_.appendChild(layer);\n};\n\n/**\n* Stops the spinner animation.\n* Public method for users who need to stop the spinner for any reason.\n* @public\n*/\nMaterialSpinner.prototype.stop = function() {\n  'use strict';\n\n  this.element_.classList.remove('is-active');\n};\n\n/**\n* Starts the spinner animation.\n* Public method for users who need to manually start the spinner for any reason\n* (instead of just adding the 'is-active' class to their markup).\n* @public\n*/\nMaterialSpinner.prototype.start = function() {\n  'use strict';\n\n  this.element_.classList.add('is-active');\n};\n\n/**\n * Initialize element.\n */\nMaterialSpinner.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    for (var i = 1; i <= this.Constant_.MDL_SPINNER_LAYER_COUNT; i++) {\n      this.createLayer(i);\n    }\n\n    this.element_.classList.add('is-upgraded');\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialSpinner,\n  classAsString: 'MaterialSpinner',\n  cssClass: 'mdl-js-spinner'\n});\n","/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Checkbox MDL component.\n * Implements MDL component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialSwitch(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialSwitch.prototype.Constant_ = {\n  TINY_TIMEOUT: 0.001\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialSwitch.prototype.CssClasses_ = {\n  INPUT: 'mdl-switch__input',\n  TRACK: 'mdl-switch__track',\n  THUMB: 'mdl-switch__thumb',\n  FOCUS_HELPER: 'mdl-switch__focus-helper',\n  RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n  RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n  RIPPLE_CONTAINER: 'mdl-switch__ripple-container',\n  RIPPLE_CENTER: 'mdl-ripple--center',\n  RIPPLE: 'mdl-ripple',\n  IS_FOCUSED: 'is-focused',\n  IS_DISABLED: 'is-disabled',\n  IS_CHECKED: 'is-checked'\n};\n\n/**\n * Handle change of state.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialSwitch.prototype.onChange_ = function(event) {\n  'use strict';\n\n  this.updateClasses_();\n};\n\n/**\n * Handle focus of element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialSwitch.prototype.onFocus_ = function(event) {\n  'use strict';\n\n  this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n\n/**\n * Handle lost focus of element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialSwitch.prototype.onBlur_ = function(event) {\n  'use strict';\n\n  this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n\n/**\n * Handle mouseup.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialSwitch.prototype.onMouseUp_ = function(event) {\n  'use strict';\n\n  this.blur_();\n};\n\n/**\n * Handle class updates.\n * @param {HTMLElement} button The button whose classes we should update.\n * @param {HTMLElement} label The label whose classes we should update.\n * @private\n */\nMaterialSwitch.prototype.updateClasses_ = function() {\n  'use strict';\n\n  if (this.inputElement_.disabled) {\n    this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n  } else {\n    this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n  }\n\n  if (this.inputElement_.checked) {\n    this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n  } else {\n    this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n  }\n};\n\n/**\n * Add blur.\n * @private\n */\nMaterialSwitch.prototype.blur_ = function(event) {\n  'use strict';\n\n  // TODO: figure out why there's a focus event being fired after our blur,\n  // so that we can avoid this hack.\n  window.setTimeout(function() {\n    this.inputElement_.blur();\n  }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n\n// Public methods.\n\n/**\n * Disable switch.\n * @public\n */\nMaterialSwitch.prototype.disable = function() {\n  'use strict';\n\n  this.inputElement_.disabled = true;\n  this.updateClasses_();\n};\n\n/**\n * Enable switch.\n * @public\n */\nMaterialSwitch.prototype.enable = function() {\n  'use strict';\n\n  this.inputElement_.disabled = false;\n  this.updateClasses_();\n};\n\n/**\n * Activate switch.\n * @public\n */\nMaterialSwitch.prototype.on = function() {\n  'use strict';\n\n  this.inputElement_.checked = true;\n  this.updateClasses_();\n};\n\n/**\n * Deactivate switch.\n * @public\n */\nMaterialSwitch.prototype.off = function() {\n  'use strict';\n\n  this.inputElement_.checked = false;\n  this.updateClasses_();\n};\n\n/**\n * Initialize element.\n */\nMaterialSwitch.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    this.inputElement_ = this.element_.querySelector('.' +\n        this.CssClasses_.INPUT);\n\n    var track = document.createElement('div');\n    track.classList.add(this.CssClasses_.TRACK);\n\n    var thumb = document.createElement('div');\n    thumb.classList.add(this.CssClasses_.THUMB);\n\n    var focusHelper = document.createElement('span');\n    focusHelper.classList.add(this.CssClasses_.FOCUS_HELPER);\n\n    thumb.appendChild(focusHelper);\n\n    this.element_.appendChild(track);\n    this.element_.appendChild(thumb);\n\n    var rippleContainer;\n    if (this.element_.classList.contains(\n        this.CssClasses_.RIPPLE_EFFECT)) {\n      this.element_.classList.add(\n          this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n      rippleContainer = document.createElement('span');\n      rippleContainer.classList.add(\n          this.CssClasses_.RIPPLE_CONTAINER);\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_CENTER);\n      rippleContainer.addEventListener('mouseup', this.onMouseUp_.bind(this));\n\n      var ripple = document.createElement('span');\n      ripple.classList.add(this.CssClasses_.RIPPLE);\n\n      rippleContainer.appendChild(ripple);\n      this.element_.appendChild(rippleContainer);\n    }\n\n    this.inputElement_.addEventListener('change', this.onChange_.bind(this));\n    this.inputElement_.addEventListener('focus', this.onFocus_.bind(this));\n    this.inputElement_.addEventListener('blur', this.onBlur_.bind(this));\n    this.element_.addEventListener('mouseup', this.onMouseUp_.bind(this));\n\n    this.updateClasses_();\n    this.element_.classList.add('is-upgraded');\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialSwitch,\n  classAsString: 'MaterialSwitch',\n  cssClass: 'mdl-js-switch'\n});\n","/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Tabs MDL component.\n * Implements MDL component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialTabs(element) {\n  'use strict';\n\n  // Stores the HTML element.\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string}\n * @private\n */\nMaterialTabs.prototype.Constant_ = {\n  // None at the moment.\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialTabs.prototype.CssClasses_ = {\n  TAB_CLASS: 'mdl-tabs__tab',\n  PANEL_CLASS: 'mdl-tabs__panel',\n  ACTIVE_CLASS: 'is-active',\n  UPGRADED_CLASS: 'is-upgraded',\n\n  MDL_JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n  MDL_RIPPLE_CONTAINER: 'mdl-tabs__ripple-container',\n  MDL_RIPPLE: 'mdl-ripple',\n  MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events'\n};\n\n/**\n * Handle clicks to a tabs component\n * @private\n */\nMaterialTabs.prototype.initTabs_ = function(e) {\n  'use strict';\n\n  if (this.element_.classList.contains(this.CssClasses_.MDL_JS_RIPPLE_EFFECT)) {\n    this.element_.classList.add(\n      this.CssClasses_.MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS);\n  }\n\n  // Select element tabs, document panels\n  this.tabs_ = this.element_.querySelectorAll('.' + this.CssClasses_.TAB_CLASS);\n  this.panels_ =\n      this.element_.querySelectorAll('.' + this.CssClasses_.PANEL_CLASS);\n\n  // Create new tabs for each tab element\n  for (var i = 0; i < this.tabs_.length; i++) {\n    new MaterialTab(this.tabs_[i], this);\n  }\n\n  this.element_.classList.add(this.CssClasses_.UPGRADED_CLASS);\n};\n\n/**\n * Reset tab state, dropping active classes\n * @private\n */\nMaterialTabs.prototype.resetTabState_ = function() {\n  'use strict';\n\n  for (var k = 0; k < this.tabs_.length; k++) {\n    this.tabs_[k].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n  }\n};\n\n/**\n * Reset panel state, droping active classes\n * @private\n */\nMaterialTabs.prototype.resetPanelState_ = function() {\n  'use strict';\n\n  for (var j = 0; j < this.panels_.length; j++) {\n    this.panels_[j].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n  }\n};\n\nMaterialTabs.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    this.initTabs_();\n  }\n};\n\nfunction MaterialTab(tab, ctx) {\n  'use strict';\n\n  if (tab) {\n    if (ctx.element_.classList.contains(ctx.CssClasses_.MDL_JS_RIPPLE_EFFECT)) {\n      var rippleContainer = document.createElement('span');\n      rippleContainer.classList.add(ctx.CssClasses_.MDL_RIPPLE_CONTAINER);\n      rippleContainer.classList.add(ctx.CssClasses_.MDL_JS_RIPPLE_EFFECT);\n      var ripple = document.createElement('span');\n      ripple.classList.add(ctx.CssClasses_.MDL_RIPPLE);\n      rippleContainer.appendChild(ripple);\n      tab.appendChild(rippleContainer);\n    }\n\n    tab.addEventListener('click', function(e) {\n      e.preventDefault();\n      var href = tab.href.split('#')[1];\n      var panel = ctx.element_.querySelector('#' + href);\n      ctx.resetTabState_();\n      ctx.resetPanelState_();\n      tab.classList.add(ctx.CssClasses_.ACTIVE_CLASS);\n      panel.classList.add(ctx.CssClasses_.ACTIVE_CLASS);\n    });\n\n  }\n}\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialTabs,\n  classAsString: 'MaterialTabs',\n  cssClass: 'mdl-js-tabs'\n});\n","/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Textfield MDL component.\n * Implements MDL component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialTextfield(element) {\n  'use strict';\n\n  this.element_ = element;\n  this.maxRows = this.Constant_.NO_MAX_ROWS;\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialTextfield.prototype.Constant_ = {\n  NO_MAX_ROWS: -1,\n  MAX_ROWS_ATTRIBUTE: 'maxrows'\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialTextfield.prototype.CssClasses_ = {\n  LABEL: 'mdl-textfield__label',\n  INPUT: 'mdl-textfield__input',\n  IS_DIRTY: 'is-dirty',\n  IS_FOCUSED: 'is-focused',\n  IS_DISABLED: 'is-disabled',\n  IS_INVALID: 'is-invalid',\n  IS_UPGRADED: 'is-upgraded'\n};\n\n/**\n * Handle input being entered.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialTextfield.prototype.onKeyDown_ = function(event) {\n  'use strict';\n\n  var currentRowCount = event.target.value.split('\\n').length;\n  if (event.keyCode === 13) {\n    if (currentRowCount >= this.maxRows) {\n      event.preventDefault();\n    }\n  }\n};\n\n/**\n * Handle focus.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialTextfield.prototype.onFocus_ = function(event) {\n  'use strict';\n\n  this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n\n/**\n * Handle lost focus.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialTextfield.prototype.onBlur_ = function(event) {\n  'use strict';\n\n  this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n\n/**\n * Handle class updates.\n * @param {HTMLElement} button The button whose classes we should update.\n * @param {HTMLElement} label The label whose classes we should update.\n * @private\n */\nMaterialTextfield.prototype.updateClasses_ = function() {\n  'use strict';\n\n  if (this.input_.disabled) {\n    this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n  } else {\n    this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n  }\n\n  if (this.input_.validity.valid) {\n    this.element_.classList.remove(this.CssClasses_.IS_INVALID);\n  } else {\n    this.element_.classList.add(this.CssClasses_.IS_INVALID);\n  }\n\n  if (this.input_.value && this.input_.value.length > 0) {\n    this.element_.classList.add(this.CssClasses_.IS_DIRTY);\n  } else {\n    this.element_.classList.remove(this.CssClasses_.IS_DIRTY);\n  }\n};\n\n// Public methods.\n\n/**\n * Disable text field.\n * @public\n */\nMaterialTextfield.prototype.disable = function() {\n  'use strict';\n\n  this.input_.disabled = true;\n  this.updateClasses_();\n};\n\n/**\n * Enable text field.\n * @public\n */\nMaterialTextfield.prototype.enable = function() {\n  'use strict';\n\n  this.input_.disabled = false;\n  this.updateClasses_();\n};\n\n/**\n * Update text field value.\n * @param {String} value The value to which to set the control (optional).\n * @public\n */\nMaterialTextfield.prototype.change = function(value) {\n  'use strict';\n\n  if (value) {\n    this.input_.value = value;\n  }\n  this.updateClasses_();\n};\n\n/**\n * Initialize element.\n */\nMaterialTextfield.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    this.label_ = this.element_.querySelector('.' + this.CssClasses_.LABEL);\n    this.input_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n\n    if (this.input_) {\n      if (this.input_.hasAttribute(this.Constant_.MAX_ROWS_ATTRIBUTE)) {\n        this.maxRows = parseInt(this.input_.getAttribute(\n            this.Constant_.MAX_ROWS_ATTRIBUTE), 10);\n        if (isNaN(this.maxRows)) {\n          this.maxRows = this.Constant_.NO_MAX_ROWS;\n        }\n      }\n\n      this.input_.addEventListener('input', this.updateClasses_.bind(this));\n      this.input_.addEventListener('focus', this.onFocus_.bind(this));\n      this.input_.addEventListener('blur', this.onBlur_.bind(this));\n\n      if (this.maxRows !== this.Constant_.NO_MAX_ROWS) {\n        // TODO: This should handle pasting multi line text.\n        // Currently doesn't.\n        this.input_.addEventListener('keydown', this.onKeyDown_.bind(this));\n      }\n\n      this.updateClasses_();\n      this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialTextfield,\n  classAsString: 'MaterialTextfield',\n  cssClass: 'mdl-js-textfield'\n});\n","/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Tooltip MDL component.\n * Implements MDL component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialTooltip(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialTooltip.prototype.Constant_ = {\n  // None for now.\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialTooltip.prototype.CssClasses_ = {\n  IS_ACTIVE: 'is-active'\n};\n\n\n/**\n * Handle mouseenter for tooltip.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialTooltip.prototype.handleMouseEnter_ = function(event) {\n  'use strict';\n\n  event.stopPropagation();\n  var props = event.target.getBoundingClientRect();\n  this.element_.style.left = props.left + (props.width / 2) + 'px';\n  this.element_.style.marginLeft = -1 * (this.element_.offsetWidth / 2) + 'px';\n  this.element_.style.top = props.top + props.height + 10 + 'px';\n  this.element_.classList.add(this.CssClasses_.IS_ACTIVE);\n};\n\n\n/**\n * Handle mouseleave for tooltip.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialTooltip.prototype.handleMouseLeave_ = function(event) {\n  'use strict';\n\n  event.stopPropagation();\n  this.element_.classList.remove(this.CssClasses_.IS_ACTIVE);\n};\n\n\n/**\n * Initialize element.\n */\nMaterialTooltip.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    var forElId = this.element_.getAttribute('for');\n    var forEl = null;\n\n    if (forElId) {\n      forEl = document.getElementById(forElId);\n    }\n\n    if (forEl) {\n      forEl.addEventListener('mouseenter', this.handleMouseEnter_.bind(this),\n          false);\n      forEl.addEventListener('mouseleave', this.handleMouseLeave_.bind(this));\n    }\n  }\n};\n\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialTooltip,\n  classAsString: 'MaterialTooltip',\n  cssClass: 'mdl-tooltip'\n});\n","/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Layout MDL component.\n * Implements MDL component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialLayout(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialLayout.prototype.Constant_ = {\n  MAX_WIDTH: '(max-width: 850px)'\n};\n\n/**\n * Modes.\n * @enum {number}\n * @private\n */\nMaterialLayout.prototype.Mode_ = {\n  STANDARD: 0,\n  SEAMED: 1,\n  WATERFALL: 2,\n  SCROLL: 3\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialLayout.prototype.CssClasses_ = {\n  HEADER: 'mdl-layout__header',\n  DRAWER: 'mdl-layout__drawer',\n  CONTENT: 'mdl-layout__content',\n  DRAWER_BTN: 'mdl-layout__drawer-button',\n\n  JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n  RIPPLE_CONTAINER: 'mdl-layout__tab-ripple-container',\n  RIPPLE: 'mdl-ripple',\n  RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n\n  HEADER_SEAMED: 'mdl-layout__header--seamed',\n  HEADER_WATERFALL: 'mdl-layout__header--waterfall',\n  HEADER_SCROLL: 'mdl-layout__header--scroll',\n\n  FIXED_HEADER: 'mdl-layout--fixed-header',\n  OBFUSCATOR: 'mdl-layout__obfuscator',\n\n  TAB_BAR: 'mdl-layout__tab-bar',\n  TAB_CONTAINER: 'mdl-layout__tab-bar-container',\n  TAB: 'mdl-layout__tab',\n  TAB_BAR_BUTTON: 'mdl-layout__tab-bar-button',\n  TAB_BAR_LEFT_BUTTON: 'mdl-layout__tab-bar-left-button',\n  TAB_BAR_RIGHT_BUTTON: 'mdl-layout__tab-bar-right-button',\n  PANEL: 'mdl-layout__tab-panel',\n\n  HAS_DRAWER_CLASS: 'has-drawer',\n  SHADOW_CLASS: 'is-casting-shadow',\n  COMPACT_CLASS: 'is-compact',\n  SMALL_SCREEN_CLASS: 'is-small-screen',\n  DRAWER_OPEN_CLASS: 'is-visible',\n  ACTIVE_CLASS: 'is-active',\n  UPGRADED_CLASS: 'is-upgraded',\n  ANIMATING_CLASS: 'is-animating'\n};\n\n/**\n * Handles scrolling on the content.\n * @private\n */\nMaterialLayout.prototype.contentScrollHandler_ = function() {\n  'use strict';\n\n  if(this.header_.classList.contains(this.CssClasses_.ANIMATING_CLASS)) {\n    return;\n  }\n\n  if (this.content_.scrollTop > 0 && !this.header_.classList.contains(this.CssClasses_.COMPACT_CLASS)) {\n    this.header_.classList.add(this.CssClasses_.SHADOW_CLASS);\n    this.header_.classList.add(this.CssClasses_.COMPACT_CLASS);\n    this.header_.classList.add(this.CssClasses_.ANIMATING_CLASS);\n  } else if (this.content_.scrollTop <= 0 && this.header_.classList.contains(this.CssClasses_.COMPACT_CLASS)) {\n    this.header_.classList.remove(this.CssClasses_.SHADOW_CLASS);\n    this.header_.classList.remove(this.CssClasses_.COMPACT_CLASS);\n    this.header_.classList.add(this.CssClasses_.ANIMATING_CLASS);\n  }\n};\n\n/**\n * Handles changes in screen size.\n * @private\n */\nMaterialLayout.prototype.screenSizeHandler_ = function() {\n  'use strict';\n\n  if (this.screenSizeMediaQuery_.matches) {\n    this.element_.classList.add(this.CssClasses_.SMALL_SCREEN_CLASS);\n  } else {\n    this.element_.classList.remove(this.CssClasses_.SMALL_SCREEN_CLASS);\n    // Collapse drawer (if any) when moving to a large screen size.\n    if (this.drawer_) {\n      this.drawer_.classList.remove(this.CssClasses_.DRAWER_OPEN_CLASS);\n    }\n  }\n};\n\n/**\n * Handles toggling of the drawer.\n * @param {Element} drawer The drawer container element.\n * @private\n */\nMaterialLayout.prototype.drawerToggleHandler_ = function() {\n  'use strict';\n\n  this.drawer_.classList.toggle(this.CssClasses_.DRAWER_OPEN_CLASS);\n};\n\n/**\n * Handles (un)setting the `is-animating` class\n */\nMaterialLayout.prototype.headerTransitionEndHandler = function() {\n  'use strict';\n\n  this.header_.classList.remove(this.CssClasses_.ANIMATING_CLASS);\n};\n\n/**\n * Handles expanding the header on click\n */\nMaterialLayout.prototype.headerClickHandler = function() {\n  'use strict';\n\n  if (this.header_.classList.contains(this.CssClasses_.COMPACT_CLASS)) {\n    this.header_.classList.remove(this.CssClasses_.COMPACT_CLASS);\n    this.header_.classList.add(this.CssClasses_.ANIMATING_CLASS);\n  }\n};\n\n/**\n * Reset tab state, dropping active classes\n * @private\n */\nMaterialLayout.prototype.resetTabState_ = function(tabBar) {\n  'use strict';\n\n  for (var k = 0; k < tabBar.length; k++) {\n    tabBar[k].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n  }\n};\n\n/**\n * Reset panel state, droping active classes\n * @private\n */\nMaterialLayout.prototype.resetPanelState_ = function(panels) {\n  'use strict';\n\n  for (var j = 0; j < panels.length; j++) {\n    panels[j].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n  }\n};\n\n/**\n * Initialize element.\n */\nMaterialLayout.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    var container = document.createElement('div');\n    container.classList.add('mdl-layout__container');\n    this.element_.parentElement.insertBefore(container, this.element_);\n    this.element_.parentElement.removeChild(this.element_);\n    container.appendChild(this.element_);\n\n    this.header_ = this.element_.querySelector('.' + this.CssClasses_.HEADER);\n    this.drawer_ = this.element_.querySelector('.' + this.CssClasses_.DRAWER);\n    this.tabBar_ = this.element_.querySelector('.' + this.CssClasses_.TAB_BAR);\n    this.content_ = this.element_.querySelector('.' + this.CssClasses_.CONTENT);\n\n    var mode = this.Mode_.STANDARD;\n\n    // Keep an eye on screen size, and add/remove auxiliary class for styling\n    // of small screens.\n    this.screenSizeMediaQuery_ = window.matchMedia(this.Constant_.MAX_WIDTH);\n    this.screenSizeMediaQuery_.addListener(this.screenSizeHandler_.bind(this));\n    this.screenSizeHandler_();\n\n    if (this.header_) {\n      if (this.header_.classList.contains(this.CssClasses_.HEADER_SEAMED)) {\n        mode = this.Mode_.SEAMED;\n      } else if (this.header_.classList.contains(\n          this.CssClasses_.HEADER_WATERFALL)) {\n        mode = this.Mode_.WATERFALL;\n        this.header_.addEventListener('transitionend',\n          this.headerTransitionEndHandler.bind(this));\n        this.header_.addEventListener('click',\n          this.headerClickHandler.bind(this));\n      } else if (this.element_.classList.contains(\n          this.CssClasses_.HEADER_SCROLL)) {\n        mode = this.Mode_.SCROLL;\n      }\n\n      if (mode === this.Mode_.STANDARD) {\n        this.header_.classList.add(this.CssClasses_.SHADOW_CLASS);\n        if (this.tabBar_) {\n          this.tabBar_.classList.add(this.CssClasses_.SHADOW_CLASS);\n        }\n      } else if (mode === this.Mode_.SEAMED || mode === this.Mode_.SCROLL) {\n        this.header_.classList.remove(this.CssClasses_.SHADOW_CLASS);\n        if (this.tabBar_) {\n          this.tabBar_.classList.remove(this.CssClasses_.SHADOW_CLASS);\n        }\n      } else if (mode === this.Mode_.WATERFALL) {\n        // Add and remove shadows depending on scroll position.\n        // Also add/remove auxiliary class for styling of the compact version of\n        // the header.\n        this.content_.addEventListener('scroll',\n            this.contentScrollHandler_.bind(this));\n        this.contentScrollHandler_();\n      }\n    }\n\n    // Add drawer toggling button to our layout, if we have an openable drawer.\n    if (this.drawer_) {\n      var drawerButton = document.createElement('div');\n      drawerButton.classList.add(this.CssClasses_.DRAWER_BTN);\n      drawerButton.addEventListener('click',\n          this.drawerToggleHandler_.bind(this));\n\n      // Add a class if the layout has a drawer, for altering the left padding.\n      // Adds the HAS_DRAWER_CLASS to the elements since this.header_ may or may\n      // not be present.\n      this.element_.classList.add(this.CssClasses_.HAS_DRAWER_CLASS);\n\n      // If we have a fixed header, add the button to the header rather than\n      // the layout.\n      if (this.element_.classList.contains(this.CssClasses_.FIXED_HEADER)) {\n        this.header_.insertBefore(drawerButton, this.header_.firstChild);\n      } else {\n        this.element_.insertBefore(drawerButton, this.content_);\n      }\n\n      var obfuscator = document.createElement('div');\n      obfuscator.classList.add(this.CssClasses_.OBFUSCATOR);\n      this.element_.appendChild(obfuscator);\n      obfuscator.addEventListener('click',\n          this.drawerToggleHandler_.bind(this));\n    }\n\n    // Initialize tabs, if any.\n    if (this.tabBar_) {\n      var tabContainer = document.createElement('div');\n      tabContainer.classList.add(this.CssClasses_.TAB_CONTAINER);\n      this.element_.insertBefore(tabContainer, this.tabBar_);\n      this.element_.removeChild(this.tabBar_);\n\n      var leftButton = document.createElement('div');\n      leftButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);\n      leftButton.classList.add(this.CssClasses_.TAB_BAR_LEFT_BUTTON);\n      leftButton.addEventListener('click', function() {\n        this.tabBar_.scrollLeft -= 100;\n      }.bind(this));\n\n      var rightButton = document.createElement('div');\n      rightButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);\n      rightButton.classList.add(this.CssClasses_.TAB_BAR_RIGHT_BUTTON);\n      rightButton.addEventListener('click', function() {\n        this.tabBar_.scrollLeft += 100;\n      }.bind(this));\n\n      tabContainer.appendChild(leftButton);\n      tabContainer.appendChild(this.tabBar_);\n      tabContainer.appendChild(rightButton);\n\n      // Add and remove buttons depending on scroll position.\n      var tabScrollHandler = function() {\n        if (this.tabBar_.scrollLeft > 0) {\n          leftButton.classList.add(this.CssClasses_.ACTIVE_CLASS);\n        } else {\n          leftButton.classList.remove(this.CssClasses_.ACTIVE_CLASS);\n        }\n\n        if (this.tabBar_.scrollLeft <\n            this.tabBar_.scrollWidth - this.tabBar_.offsetWidth) {\n          rightButton.classList.add(this.CssClasses_.ACTIVE_CLASS);\n        } else {\n          rightButton.classList.remove(this.CssClasses_.ACTIVE_CLASS);\n        }\n      }.bind(this);\n\n      this.tabBar_.addEventListener('scroll', tabScrollHandler);\n      tabScrollHandler();\n\n      if (this.tabBar_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {\n        this.tabBar_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n      }\n\n      // Select element tabs, document panels\n      var tabs = this.tabBar_.querySelectorAll('.' + this.CssClasses_.TAB);\n      var panels = this.content_.querySelectorAll('.' + this.CssClasses_.PANEL);\n\n      // Create new tabs for each tab element\n      for (var i = 0; i < tabs.length; i++) {\n        new MaterialLayoutTab(tabs[i], tabs, panels, this);\n      }\n    }\n\n    this.element_.classList.add(this.CssClasses_.UPGRADED_CLASS);\n  }\n};\n\nfunction MaterialLayoutTab(tab, tabs, panels, layout) {\n  'use strict';\n\n  if (tab) {\n    if (layout.tabBar_.classList.contains(\n        layout.CssClasses_.JS_RIPPLE_EFFECT)) {\n      var rippleContainer = document.createElement('span');\n      rippleContainer.classList.add(layout.CssClasses_.RIPPLE_CONTAINER);\n      rippleContainer.classList.add(layout.CssClasses_.JS_RIPPLE_EFFECT);\n      var ripple = document.createElement('span');\n      ripple.classList.add(layout.CssClasses_.RIPPLE);\n      rippleContainer.appendChild(ripple);\n      tab.appendChild(rippleContainer);\n    }\n\n    tab.addEventListener('click', function(e) {\n      e.preventDefault();\n      var href = tab.href.split('#')[1];\n      var panel = layout.content_.querySelector('#' + href);\n      layout.resetTabState_(tabs);\n      layout.resetPanelState_(panels);\n      tab.classList.add(layout.CssClasses_.ACTIVE_CLASS);\n      panel.classList.add(layout.CssClasses_.ACTIVE_CLASS);\n    });\n\n  }\n}\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialLayout,\n  classAsString: 'MaterialLayout',\n  cssClass: 'mdl-js-layout'\n});\n","/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Ripple MDL component.\n * Implements MDL component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialRipple(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialRipple.prototype.Constant_ = {\n  INITIAL_SCALE: 'scale(0.0001, 0.0001)',\n  INITIAL_SIZE: '1px',\n  INITIAL_OPACITY: '0.4',\n  FINAL_OPACITY: '0',\n  FINAL_SCALE: ''\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialRipple.prototype.CssClasses_ = {\n  RIPPLE_CENTER: 'mdl-ripple--center',\n  RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n  RIPPLE: 'mdl-ripple',\n  IS_ANIMATING: 'is-animating',\n  IS_VISIBLE: 'is-visible'\n};\n\n/**\n * Handle mouse / finger down on element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialRipple.prototype.downHandler_ = function(event) {\n  'use strict';\n\n  this.rippleElement_.classList.add(this.CssClasses_.IS_VISIBLE);\n\n  if (event.type === 'mousedown' && this.ignoringMouseDown_) {\n    this.ignoringMouseDown_ = false;\n  } else {\n    if (event.type === 'touchstart') {\n      this.ignoringMouseDown_ = true;\n    }\n    var frameCount = this.getFrameCount();\n    if (frameCount > 0) {\n      return;\n    }\n    this.setFrameCount(1);\n    var bound = event.currentTarget.getBoundingClientRect();\n    var x;\n    var y;\n    // Check if we are handling a keyboard click.\n    if (event.clientX === 0 && event.clientY === 0) {\n      x = Math.round(bound.width / 2);\n      y = Math.round(bound.height / 2);\n    } else {\n      var clientX = event.clientX ? event.clientX : event.touches[0].clientX;\n      var clientY = event.clientY ? event.clientY : event.touches[0].clientY;\n      x = Math.round(clientX - bound.left);\n      y = Math.round(clientY - bound.top);\n    }\n    this.setRippleXY(x, y);\n    this.setRippleStyles(true);\n    window.requestAnimationFrame(this.animFrameHandler.bind(this));\n  }\n};\n\n/**\n * Handle mouse / finger up on element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialRipple.prototype.upHandler_ = function(event) {\n  'use strict';\n\n  // Don't fire for the artificial \"mouseup\" generated by a double-click.\n  if (event && event.detail !== 2) {\n    this.rippleElement_.classList.remove(this.CssClasses_.IS_VISIBLE);\n  }\n};\n\n/**\n * Initialize element.\n */\nMaterialRipple.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    var recentering =\n        this.element_.classList.contains(this.CssClasses_.RIPPLE_CENTER);\n    if (!this.element_.classList.contains(\n        this.CssClasses_.RIPPLE_EFFECT_IGNORE_EVENTS)) {\n      this.rippleElement_ = this.element_.querySelector('.' +\n          this.CssClasses_.RIPPLE);\n      this.frameCount_ = 0;\n      this.rippleSize_ = 0;\n      this.x_ = 0;\n      this.y_ = 0;\n\n      // Touch start produces a compat mouse down event, which would cause a\n      // second ripples. To avoid that, we use this property to ignore the first\n      // mouse down after a touch start.\n      this.ignoringMouseDown_ = false;\n\n      if (this.rippleElement_) {\n        var bound = this.element_.getBoundingClientRect();\n        this.rippleSize_ = Math.sqrt(bound.width * bound.width +\n            bound.height * bound.height) * 2 + 2;\n        this.rippleElement_.style.width = this.rippleSize_ + 'px';\n        this.rippleElement_.style.height = this.rippleSize_ + 'px';\n      }\n\n      this.element_.addEventListener('mousedown', this.downHandler_.bind(this));\n      this.element_.addEventListener('touchstart',\n          this.downHandler_.bind(this));\n\n      this.element_.addEventListener('mouseup', this.upHandler_.bind(this));\n      this.element_.addEventListener('mouseleave', this.upHandler_.bind(this));\n      this.element_.addEventListener('touchend', this.upHandler_.bind(this));\n      this.element_.addEventListener('blur', this.upHandler_.bind(this));\n\n      this.getFrameCount = function() {\n        return this.frameCount_;\n      };\n\n      this.setFrameCount = function(fC) {\n        this.frameCount_ = fC;\n      };\n\n      this.getRippleElement = function() {\n        return this.rippleElement_;\n      };\n\n      this.setRippleXY = function(newX, newY) {\n        this.x_ = newX;\n        this.y_ = newY;\n      };\n\n      this.setRippleStyles = function(start) {\n        if (this.rippleElement_ !== null) {\n          var transformString;\n          var scale;\n          var size;\n          var offset = 'translate(' + this.x_ + 'px, ' + this.y_ + 'px)';\n\n          if (start) {\n            scale = this.Constant_.INITIAL_SCALE;\n            size = this.Constant_.INITIAL_SIZE;\n          } else {\n            scale = this.Constant_.FINAL_SCALE;\n            size = this.rippleSize_ + 'px';\n            if (recentering) {\n              offset = 'translate(' + bound.width / 2 + 'px, ' +\n                bound.height / 2 + 'px)';\n            }\n          }\n\n          transformString = 'translate(-50%, -50%) ' + offset + scale;\n\n          this.rippleElement_.style.webkitTransform = transformString;\n          this.rippleElement_.style.msTransform = transformString;\n          this.rippleElement_.style.transform = transformString;\n\n          if (start) {\n            this.rippleElement_.classList.remove(this.CssClasses_.IS_ANIMATING);\n          } else {\n            this.rippleElement_.classList.add(this.CssClasses_.IS_ANIMATING);\n          }\n        }\n      };\n\n      this.animFrameHandler = function() {\n        if (this.frameCount_-- > 0) {\n          window.requestAnimationFrame(this.animFrameHandler.bind(this));\n        } else {\n          this.setRippleStyles(false);\n        }\n      };\n    }\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialRipple,\n  classAsString: 'MaterialRipple',\n  cssClass: 'mdl-js-ripple-effect'\n});\n","/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A component handler interface using the revealing module design pattern.\n * More details on this pattern design here:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @author Jason Mayes.\n */\n /* exported componentHandler */\nvar componentHandler = (function() {\n  'use strict';\n\n  var registeredComponents_ = [];\n  var createdComponents_ = [];\n\n  /**\n   * Searches registered components for a class we are interested in using.\n   * Optionally replaces a match with passed object if specified.\n   * @param {string} name The name of a class we want to use.\n   * @param {object} optReplace Optional object to replace match with.\n   * @return {object | false}\n   * @private\n   */\n  function findRegisteredClass_(name, optReplace) {\n    for (var i = 0; i < registeredComponents_.length; i++) {\n      if (registeredComponents_[i].className === name) {\n        if (optReplace !== undefined) {\n          registeredComponents_[i] = optReplace;\n        }\n        return registeredComponents_[i];\n      }\n    }\n    return false;\n  }\n\n\n  /**\n   * Searches existing DOM for elements of our component type and upgrades them\n   * if they have not already been upgraded.\n   * @param {string} jsClass the programatic name of the element class we need\n   * to create a new instance of.\n   * @param {string} cssClass the name of the CSS class elements of this type\n   * will have.\n   */\n  function upgradeDomInternal(jsClass, cssClass) {\n    if (jsClass === undefined && cssClass === undefined) {\n      for (var i = 0; i < registeredComponents_.length; i++) {\n        upgradeDomInternal(registeredComponents_[i].className,\n            registeredComponents_[i].cssClass);\n      }\n    } else {\n      if (cssClass === undefined) {\n        var registeredClass = findRegisteredClass_(jsClass);\n        if (registeredClass) {\n          cssClass = registeredClass.cssClass;\n        }\n      }\n\n      var elements = document.querySelectorAll('.' + cssClass);\n      for (var n = 0; n < elements.length; n++) {\n        upgradeElementInternal(elements[n], jsClass);\n      }\n    }\n  }\n\n\n  /**\n   * Upgrades a specific element rather than all in the DOM.\n   * @param {HTMLElement} element The element we wish to upgrade.\n   * @param {string} jsClass The name of the class we want to upgrade\n   * the element to.\n   */\n  function upgradeElementInternal(element, jsClass) {\n    // Only upgrade elements that have not already been upgraded.\n    var dataUpgraded = element.getAttribute('data-upgraded');\n\n    if (dataUpgraded === null || dataUpgraded.indexOf(jsClass) === -1) {\n      // Upgrade element.\n      if (dataUpgraded === null) {\n        dataUpgraded = '';\n      }\n      element.setAttribute('data-upgraded', dataUpgraded + ',' + jsClass);\n      var registeredClass = findRegisteredClass_(jsClass);\n      if (registeredClass) {\n        // new\n        var instance = new registeredClass.classConstructor(element);\n        createdComponents_.push(instance);\n        // Call any callbacks the user has registered with this component type.\n        registeredClass.callbacks.forEach(function (callback) {\n          callback(element);\n        });\n\n        // Assign per element instance for control over API\n        element.widget = instance;\n      } else {\n        // If component creator forgot to register, try and see if\n        // it is in global scope.\n        createdComponents_.push(new window[jsClass](element));\n      }\n\n      var ev = document.createEvent('Events');\n      ev.initEvent('mdl-componentupgraded', true, true);\n      element.dispatchEvent(ev);\n    }\n  }\n\n\n  /**\n   * Registers a class for future use and attempts to upgrade existing DOM.\n   * @param {object} config An object containing:\n   * {constructor: Constructor, classAsString: string, cssClass: string}\n   */\n  function registerInternal(config) {\n    var newConfig = {\n      'classConstructor': config.constructor,\n      'className': config.classAsString,\n      'cssClass': config.cssClass,\n      'callbacks': []\n    };\n\n    var found = findRegisteredClass_(config.classAsString, newConfig);\n\n    if (!found) {\n      registeredComponents_.push(newConfig);\n    }\n  }\n\n\n  /**\n   * Allows user to be alerted to any upgrades that are performed for a given\n   * component type\n   * @param {string} jsClass The class name of the MDL component we wish\n   * to hook into for any upgrades performed.\n   * @param {function} callback The function to call upon an upgrade. This\n   * function should expect 1 parameter - the HTMLElement which got upgraded.\n   */\n  function registerUpgradedCallbackInternal(jsClass, callback) {\n    var regClass = findRegisteredClass_(jsClass);\n    if (regClass) {\n      regClass.callbacks.push(callback);\n    }\n  }\n\n\n  /**\n   * Upgrades all registered components found in the current DOM. This is\n   * automatically called on window load.\n   */\n  function upgradeAllRegisteredInternal() {\n    for (var n = 0; n < registeredComponents_.length; n++) {\n      upgradeDomInternal(registeredComponents_[n].className);\n    }\n  }\n\n\n  // Now return the functions that should be made public with their publicly\n  // facing names...\n  return {\n    upgradeDom: upgradeDomInternal,\n    upgradeElement: upgradeElementInternal,\n    upgradeAllRegistered: upgradeAllRegisteredInternal,\n    registerUpgradedCallback: registerUpgradedCallbackInternal,\n    register: registerInternal\n  };\n})();\n\n\nwindow.addEventListener('load', function() {\n  'use strict';\n\n  /**\n   * Performs a \"Cutting the mustard\" test. If the browser supports the features\n   * tested, adds a mdl-js class to the <html> element. It then upgrades all MDL\n   * components requiring JavaScript.\n   */\n  if ('classList' in document.createElement('div') && 'querySelector' in document &&\n      'addEventListener' in window && Array.prototype.forEach) {\n    document.documentElement.classList.add('mdl-js');\n    componentHandler.upgradeAllRegistered();\n  } else {\n    componentHandler.upgradeElement = componentHandler.register = function () { };\n  }\n});\n","// Source: https://github.com/darius/requestAnimationFrame/blob/master/requestAnimationFrame.js\n// Adapted from https://gist.github.com/paulirish/1579671 which derived from\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n// http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\n\n// requestAnimationFrame polyfill by Erik Möller.\n// Fixes from Paul Irish, Tino Zijdel, Andrew Mao, Klemen Slavič, Darius Bacon\n\n// MIT license\n\n(function() {\n'use strict';\n\nif (!Date.now) {\n  Date.now = function() { return new Date().getTime(); };\n}\n\nvar vendors = ['webkit', 'moz'];\nfor (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n  var vp = vendors[i];\n  window.requestAnimationFrame = window[vp + 'RequestAnimationFrame'];\n  window.cancelAnimationFrame = (window[vp + 'CancelAnimationFrame'] ||\n  window[vp + 'CancelRequestAnimationFrame']);\n}\n\nif (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\n  var lastTime = 0;\n  window.requestAnimationFrame = function(callback) {\n      var now = Date.now();\n      var nextTime = Math.max(lastTime + 16, now);\n      return setTimeout(function() { callback(lastTime = nextTime); },\n                        nextTime - now);\n    };\n  window.cancelAnimationFrame = clearTimeout;\n}\n\n})();\n\n","/**\n * material-design-lite - Material Design Components in CSS, JS and HTML\n * @version v1.0.0\n * @link https://github.com/google/material-design-lite\n * @license Apache-2\n */\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A component handler interface using the revealing module design pattern.\n * More details on this pattern design here:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @author Jason Mayes.\n */\n /* exported componentHandler */\nvar componentHandler = (function() {\n  'use strict';\n\n  var registeredComponents_ = [];\n  var createdComponents_ = [];\n\n  /**\n   * Searches registered components for a class we are interested in using.\n   * Optionally replaces a match with passed object if specified.\n   * @param {string} name The name of a class we want to use.\n   * @param {object} optReplace Optional object to replace match with.\n   * @return {object | false}\n   * @private\n   */\n  function findRegisteredClass_(name, optReplace) {\n    for (var i = 0; i < registeredComponents_.length; i++) {\n      if (registeredComponents_[i].className === name) {\n        if (optReplace !== undefined) {\n          registeredComponents_[i] = optReplace;\n        }\n        return registeredComponents_[i];\n      }\n    }\n    return false;\n  }\n\n\n  /**\n   * Searches existing DOM for elements of our component type and upgrades them\n   * if they have not already been upgraded.\n   * @param {string} jsClass the programatic name of the element class we need\n   * to create a new instance of.\n   * @param {string} cssClass the name of the CSS class elements of this type\n   * will have.\n   */\n  function upgradeDomInternal(jsClass, cssClass) {\n    if (jsClass === undefined && cssClass === undefined) {\n      for (var i = 0; i < registeredComponents_.length; i++) {\n        upgradeDomInternal(registeredComponents_[i].className,\n            registeredComponents_[i].cssClass);\n      }\n    } else {\n      if (cssClass === undefined) {\n        var registeredClass = findRegisteredClass_(jsClass);\n        if (registeredClass) {\n          cssClass = registeredClass.cssClass;\n        }\n      }\n\n      var elements = document.querySelectorAll('.' + cssClass);\n      for (var n = 0; n < elements.length; n++) {\n        upgradeElementInternal(elements[n], jsClass);\n      }\n    }\n  }\n\n\n  /**\n   * Upgrades a specific element rather than all in the DOM.\n   * @param {HTMLElement} element The element we wish to upgrade.\n   * @param {string} jsClass The name of the class we want to upgrade\n   * the element to.\n   */\n  function upgradeElementInternal(element, jsClass) {\n    // Only upgrade elements that have not already been upgraded.\n    var dataUpgraded = element.getAttribute('data-upgraded');\n\n    if (dataUpgraded === null || dataUpgraded.indexOf(jsClass) === -1) {\n      // Upgrade element.\n      if (dataUpgraded === null) {\n        dataUpgraded = '';\n      }\n      element.setAttribute('data-upgraded', dataUpgraded + ',' + jsClass);\n      var registeredClass = findRegisteredClass_(jsClass);\n      if (registeredClass) {\n        // new\n        var instance = new registeredClass.classConstructor(element);\n        createdComponents_.push(instance);\n        // Call any callbacks the user has registered with this component type.\n        registeredClass.callbacks.forEach(function (callback) {\n          callback(element);\n        });\n\n        // Assign per element instance for control over API\n        element.widget = instance;\n      } else {\n        // If component creator forgot to register, try and see if\n        // it is in global scope.\n        createdComponents_.push(new window[jsClass](element));\n      }\n\n      var ev = document.createEvent('Events');\n      ev.initEvent('mdl-componentupgraded', true, true);\n      element.dispatchEvent(ev);\n    }\n  }\n\n\n  /**\n   * Registers a class for future use and attempts to upgrade existing DOM.\n   * @param {object} config An object containing:\n   * {constructor: Constructor, classAsString: string, cssClass: string}\n   */\n  function registerInternal(config) {\n    var newConfig = {\n      'classConstructor': config.constructor,\n      'className': config.classAsString,\n      'cssClass': config.cssClass,\n      'callbacks': []\n    };\n\n    var found = findRegisteredClass_(config.classAsString, newConfig);\n\n    if (!found) {\n      registeredComponents_.push(newConfig);\n    }\n  }\n\n\n  /**\n   * Allows user to be alerted to any upgrades that are performed for a given\n   * component type\n   * @param {string} jsClass The class name of the MDL component we wish\n   * to hook into for any upgrades performed.\n   * @param {function} callback The function to call upon an upgrade. This\n   * function should expect 1 parameter - the HTMLElement which got upgraded.\n   */\n  function registerUpgradedCallbackInternal(jsClass, callback) {\n    var regClass = findRegisteredClass_(jsClass);\n    if (regClass) {\n      regClass.callbacks.push(callback);\n    }\n  }\n\n\n  /**\n   * Upgrades all registered components found in the current DOM. This is\n   * automatically called on window load.\n   */\n  function upgradeAllRegisteredInternal() {\n    for (var n = 0; n < registeredComponents_.length; n++) {\n      upgradeDomInternal(registeredComponents_[n].className);\n    }\n  }\n\n\n  // Now return the functions that should be made public with their publicly\n  // facing names...\n  return {\n    upgradeDom: upgradeDomInternal,\n    upgradeElement: upgradeElementInternal,\n    upgradeAllRegistered: upgradeAllRegisteredInternal,\n    registerUpgradedCallback: registerUpgradedCallbackInternal,\n    register: registerInternal\n  };\n})();\n\n\nwindow.addEventListener('load', function() {\n  'use strict';\n\n  /**\n   * Performs a \"Cutting the mustard\" test. If the browser supports the features\n   * tested, adds a mdl-js class to the <html> element. It then upgrades all MDL\n   * components requiring JavaScript.\n   */\n  if ('classList' in document.createElement('div') && 'querySelector' in document &&\n      'addEventListener' in window && Array.prototype.forEach) {\n    document.documentElement.classList.add('mdl-js');\n    componentHandler.upgradeAllRegistered();\n  } else {\n    componentHandler.upgradeElement = componentHandler.register = function () { };\n  }\n});\n\n// Source: https://github.com/darius/requestAnimationFrame/blob/master/requestAnimationFrame.js\n// Adapted from https://gist.github.com/paulirish/1579671 which derived from\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n// http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\n\n// requestAnimationFrame polyfill by Erik Möller.\n// Fixes from Paul Irish, Tino Zijdel, Andrew Mao, Klemen Slavič, Darius Bacon\n\n// MIT license\n\n(function() {\n'use strict';\n\nif (!Date.now) {\n  Date.now = function() { return new Date().getTime(); };\n}\n\nvar vendors = ['webkit', 'moz'];\nfor (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n  var vp = vendors[i];\n  window.requestAnimationFrame = window[vp + 'RequestAnimationFrame'];\n  window.cancelAnimationFrame = (window[vp + 'CancelAnimationFrame'] ||\n  window[vp + 'CancelRequestAnimationFrame']);\n}\n\nif (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\n  var lastTime = 0;\n  window.requestAnimationFrame = function(callback) {\n      var now = Date.now();\n      var nextTime = Math.max(lastTime + 16, now);\n      return setTimeout(function() { callback(lastTime = nextTime); },\n                        nextTime - now);\n    };\n  window.cancelAnimationFrame = clearTimeout;\n}\n\n})();\n\n\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Animation MDL component.\n * Implements MDL component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction DemoAnimation(element) {\n  'use strict';\n\n  this.element_ = element;\n  this.position_ = this.Constant_.STARTING_POSITION;\n  this.movable_ = this.element_.querySelector('.' + this.CssClasses_.MOVABLE);\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nDemoAnimation.prototype.Constant_ = {\n  STARTING_POSITION: 1\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nDemoAnimation.prototype.CssClasses_ = {\n  MOVABLE: 'demo-animation__movable',\n  POSITION_PREFIX: 'demo-animation--position-'\n};\n\n/**\n * Handle click of element.\n * @param {Event} event The event that fired.\n * @private\n */\nDemoAnimation.prototype.handleClick_ = function(event) {\n  'use strict';\n\n  this.movable_.classList.remove(this.CssClasses_.POSITION_PREFIX +\n      this.position_);\n  this.position_++;\n  if (this.position_ > 6) {\n    this.position_ = 1;\n  }\n  this.movable_.classList.add(this.CssClasses_.POSITION_PREFIX +\n      this.position_);\n};\n\n/**\n * Initialize element.\n */\nDemoAnimation.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    if (!this.movable_) {\n      console.error('Was expecting to find an element with class name ' +\n          this.CssClasses_.MOVABLE + ' inside of: ', this.element_);\n      return;\n    }\n\n    this.element_.addEventListener('click', this.handleClick_.bind(this));\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: DemoAnimation,\n  classAsString: 'DemoAnimation',\n  cssClass: 'demo-js-animation'\n});\n\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Button MDL component.\n * Implements MDL component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialButton(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialButton.prototype.Constant_ = {\n  // None for now.\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialButton.prototype.CssClasses_ = {\n  RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n  RIPPLE_CONTAINER: 'mdl-button__ripple-container',\n  RIPPLE: 'mdl-ripple'\n};\n\n/**\n * Handle blur of element.\n * @param {HTMLElement} element The instance of a button we want to blur.\n * @private\n */\nMaterialButton.prototype.blurHandler = function(event) {\n  'use strict';\n\n  if (event) {\n    this.element_.blur();\n  }\n};\n\n// Public methods.\n\n/**\n * Disable button.\n * @public\n */\nMaterialButton.prototype.disable = function() {\n  'use strict';\n\n  this.element_.disabled = true;\n};\n\n/**\n * Enable button.\n * @public\n */\nMaterialButton.prototype.enable = function() {\n  'use strict';\n\n  this.element_.disabled = false;\n};\n\n/**\n * Initialize element.\n */\nMaterialButton.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n      var rippleContainer = document.createElement('span');\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n      var ripple = document.createElement('span');\n      ripple.classList.add(this.CssClasses_.RIPPLE);\n      rippleContainer.appendChild(ripple);\n      ripple.addEventListener('mouseup', this.blurHandler.bind(this));\n      this.element_.appendChild(rippleContainer);\n    }\n    this.element_.addEventListener('mouseup', this.blurHandler.bind(this));\n    this.element_.addEventListener('mouseleave', this.blurHandler.bind(this));\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialButton,\n  classAsString: 'MaterialButton',\n  cssClass: 'mdl-js-button'\n});\n\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Checkbox MDL component.\n * Implements MDL component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialCheckbox(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialCheckbox.prototype.Constant_ = {\n  TINY_TIMEOUT: 0.001\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialCheckbox.prototype.CssClasses_ = {\n  INPUT: 'mdl-checkbox__input',\n  BOX_OUTLINE: 'mdl-checkbox__box-outline',\n  FOCUS_HELPER: 'mdl-checkbox__focus-helper',\n  TICK_OUTLINE: 'mdl-checkbox__tick-outline',\n  RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n  RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n  RIPPLE_CONTAINER: 'mdl-checkbox__ripple-container',\n  RIPPLE_CENTER: 'mdl-ripple--center',\n  RIPPLE: 'mdl-ripple',\n  IS_FOCUSED: 'is-focused',\n  IS_DISABLED: 'is-disabled',\n  IS_CHECKED: 'is-checked',\n  IS_UPGRADED: 'is-upgraded'\n};\n\n/**\n * Handle change of state.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialCheckbox.prototype.onChange_ = function(event) {\n  'use strict';\n\n  this.updateClasses_();\n};\n\n/**\n * Handle focus of element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialCheckbox.prototype.onFocus_ = function(event) {\n  'use strict';\n\n  this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n\n/**\n * Handle lost focus of element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialCheckbox.prototype.onBlur_ = function(event) {\n  'use strict';\n\n  this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n\n/**\n * Handle mouseup.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialCheckbox.prototype.onMouseUp_ = function(event) {\n  'use strict';\n\n  this.blur_();\n};\n\n/**\n * Handle class updates.\n * @param {HTMLElement} button The button whose classes we should update.\n * @param {HTMLElement} label The label whose classes we should update.\n * @private\n */\nMaterialCheckbox.prototype.updateClasses_ = function() {\n  'use strict';\n\n  if (this.inputElement_.disabled) {\n    this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n  } else {\n    this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n  }\n\n  if (this.inputElement_.checked) {\n    this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n  } else {\n    this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n  }\n};\n\n/**\n * Add blur.\n * @private\n */\nMaterialCheckbox.prototype.blur_ = function(event) {\n  'use strict';\n\n  // TODO: figure out why there's a focus event being fired after our blur,\n  // so that we can avoid this hack.\n  window.setTimeout(function() {\n    this.inputElement_.blur();\n  }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n\n// Public methods.\n\n/**\n * Disable checkbox.\n * @public\n */\nMaterialCheckbox.prototype.disable = function() {\n  'use strict';\n\n  this.inputElement_.disabled = true;\n  this.updateClasses_();\n};\n\n/**\n * Enable checkbox.\n * @public\n */\nMaterialCheckbox.prototype.enable = function() {\n  'use strict';\n\n  this.inputElement_.disabled = false;\n  this.updateClasses_();\n};\n\n/**\n * Check checkbox.\n * @public\n */\nMaterialCheckbox.prototype.check = function() {\n  'use strict';\n\n  this.inputElement_.checked = true;\n  this.updateClasses_();\n};\n\n/**\n * Uncheck checkbox.\n * @public\n */\nMaterialCheckbox.prototype.uncheck = function() {\n  'use strict';\n\n  this.inputElement_.checked = false;\n  this.updateClasses_();\n};\n\n/**\n * Initialize element.\n */\nMaterialCheckbox.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    this.inputElement_ = this.element_.querySelector('.' +\n        this.CssClasses_.INPUT);\n\n    var boxOutline = document.createElement('span');\n    boxOutline.classList.add(this.CssClasses_.BOX_OUTLINE);\n\n    var tickContainer = document.createElement('span');\n    tickContainer.classList.add(this.CssClasses_.FOCUS_HELPER);\n\n    var tickOutline = document.createElement('span');\n    tickOutline.classList.add(this.CssClasses_.TICK_OUTLINE);\n\n    boxOutline.appendChild(tickOutline);\n\n    this.element_.appendChild(tickContainer);\n    this.element_.appendChild(boxOutline);\n\n    var rippleContainer;\n    if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n      this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n      rippleContainer = document.createElement('span');\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_CENTER);\n      rippleContainer.addEventListener('mouseup', this.onMouseUp_.bind(this));\n\n      var ripple = document.createElement('span');\n      ripple.classList.add(this.CssClasses_.RIPPLE);\n\n      rippleContainer.appendChild(ripple);\n      this.element_.appendChild(rippleContainer);\n    }\n\n    this.inputElement_.addEventListener('change', this.onChange_.bind(this));\n    this.inputElement_.addEventListener('focus', this.onFocus_.bind(this));\n    this.inputElement_.addEventListener('blur', this.onBlur_.bind(this));\n    this.element_.addEventListener('mouseup', this.onMouseUp_.bind(this));\n\n    this.updateClasses_();\n    this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialCheckbox,\n  classAsString: 'MaterialCheckbox',\n  cssClass: 'mdl-js-checkbox'\n});\n\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for icon toggle MDL component.\n * Implements MDL component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialIconToggle(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialIconToggle.prototype.Constant_ = {\n  TINY_TIMEOUT: 0.001\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialIconToggle.prototype.CssClasses_ = {\n  INPUT: 'mdl-icon-toggle__input',\n  JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n  RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n  RIPPLE_CONTAINER: 'mdl-icon-toggle__ripple-container',\n  RIPPLE_CENTER: 'mdl-ripple--center',\n  RIPPLE: 'mdl-ripple',\n  IS_FOCUSED: 'is-focused',\n  IS_DISABLED: 'is-disabled',\n  IS_CHECKED: 'is-checked'\n};\n\n/**\n * Handle change of state.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialIconToggle.prototype.onChange_ = function(event) {\n  'use strict';\n\n  this.updateClasses_();\n};\n\n/**\n * Handle focus of element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialIconToggle.prototype.onFocus_ = function(event) {\n  'use strict';\n\n  this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n\n/**\n * Handle lost focus of element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialIconToggle.prototype.onBlur_ = function(event) {\n  'use strict';\n\n  this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n\n/**\n * Handle mouseup.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialIconToggle.prototype.onMouseUp_ = function(event) {\n  'use strict';\n\n  this.blur_();\n};\n\n/**\n * Handle class updates.\n * @param {HTMLElement} button The button whose classes we should update.\n * @param {HTMLElement} label The label whose classes we should update.\n * @private\n */\nMaterialIconToggle.prototype.updateClasses_ = function() {\n  'use strict';\n\n  if (this.inputElement_.disabled) {\n    this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n  } else {\n    this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n  }\n\n  if (this.inputElement_.checked) {\n    this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n  } else {\n    this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n  }\n};\n\n/**\n * Add blur.\n * @private\n */\nMaterialIconToggle.prototype.blur_ = function(event) {\n  'use strict';\n\n  // TODO: figure out why there's a focus event being fired after our blur,\n  // so that we can avoid this hack.\n  window.setTimeout(function() {\n    this.inputElement_.blur();\n  }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n\n// Public methods.\n\n/**\n * Disable icon toggle.\n * @public\n */\nMaterialIconToggle.prototype.disable = function() {\n  'use strict';\n\n  this.inputElement_.disabled = true;\n  this.updateClasses_();\n};\n\n/**\n * Enable icon toggle.\n * @public\n */\nMaterialIconToggle.prototype.enable = function() {\n  'use strict';\n\n  this.inputElement_.disabled = false;\n  this.updateClasses_();\n};\n\n/**\n * Check icon toggle.\n * @public\n */\nMaterialIconToggle.prototype.check = function() {\n  'use strict';\n\n  this.inputElement_.checked = true;\n  this.updateClasses_();\n};\n\n/**\n * Uncheck icon toggle.\n * @public\n */\nMaterialIconToggle.prototype.uncheck = function() {\n  'use strict';\n\n  this.inputElement_.checked = false;\n  this.updateClasses_();\n};\n\n/**\n * Initialize element.\n */\nMaterialIconToggle.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    this.inputElement_ =\n        this.element_.querySelector('.' + this.CssClasses_.INPUT);\n\n    var rippleContainer;\n    if (this.element_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {\n      this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n      rippleContainer = document.createElement('span');\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n      rippleContainer.classList.add(this.CssClasses_.JS_RIPPLE_EFFECT);\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_CENTER);\n      rippleContainer.addEventListener('mouseup', this.onMouseUp_.bind(this));\n\n      var ripple = document.createElement('span');\n      ripple.classList.add(this.CssClasses_.RIPPLE);\n\n      rippleContainer.appendChild(ripple);\n      this.element_.appendChild(rippleContainer);\n    }\n\n    this.inputElement_.addEventListener('change', this.onChange_.bind(this));\n    this.inputElement_.addEventListener('focus', this.onFocus_.bind(this));\n    this.inputElement_.addEventListener('blur', this.onBlur_.bind(this));\n    this.element_.addEventListener('mouseup', this.onMouseUp_.bind(this));\n\n    this.updateClasses_();\n    this.element_.classList.add('is-upgraded');\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialIconToggle,\n  classAsString: 'MaterialIconToggle',\n  cssClass: 'mdl-js-icon-toggle'\n});\n\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for dropdown MDL component.\n * Implements MDL component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialMenu(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialMenu.prototype.Constant_ = {\n  // Total duration of the menu animation.\n  TRANSITION_DURATION_SECONDS: 0.3,\n  // The fraction of the total duration we want to use for menu item animations.\n  TRANSITION_DURATION_FRACTION: 0.8,\n  // How long the menu stays open after choosing an option (so the user can see\n  // the ripple).\n  CLOSE_TIMEOUT: 150\n};\n\n/**\n * Keycodes, for code readability.\n * @enum {number}\n * @private\n */\nMaterialMenu.prototype.Keycodes_ = {\n  ENTER: 13,\n  ESCAPE: 27,\n  SPACE: 32,\n  UP_ARROW: 38,\n  DOWN_ARROW: 40\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialMenu.prototype.CssClasses_ = {\n  CONTAINER: 'mdl-menu__container',\n  OUTLINE: 'mdl-menu__outline',\n  ITEM: 'mdl-menu__item',\n  ITEM_RIPPLE_CONTAINER: 'mdl-menu__item-ripple-container',\n  RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n  RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n  RIPPLE: 'mdl-ripple',\n  // Statuses\n  IS_UPGRADED: 'is-upgraded',\n  IS_VISIBLE: 'is-visible',\n  IS_ANIMATING: 'is-animating',\n  // Alignment options\n  BOTTOM_LEFT: 'mdl-menu--bottom-left',  // This is the default.\n  BOTTOM_RIGHT: 'mdl-menu--bottom-right',\n  TOP_LEFT: 'mdl-menu--top-left',\n  TOP_RIGHT: 'mdl-menu--top-right',\n  UNALIGNED: 'mdl-menu--unaligned'\n};\n\n/**\n * Initialize element.\n */\nMaterialMenu.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    // Create container for the menu.\n    var container = document.createElement('div');\n    container.classList.add(this.CssClasses_.CONTAINER);\n    this.element_.parentElement.insertBefore(container, this.element_);\n    this.element_.parentElement.removeChild(this.element_);\n    container.appendChild(this.element_);\n    this.container_ = container;\n\n    // Create outline for the menu (shadow and background).\n    var outline = document.createElement('div');\n    outline.classList.add(this.CssClasses_.OUTLINE);\n    this.outline_ = outline;\n    container.insertBefore(outline, this.element_);\n\n    // Find the \"for\" element and bind events to it.\n    var forElId = this.element_.getAttribute('for');\n    var forEl = null;\n    if (forElId) {\n      forEl = document.getElementById(forElId);\n      if (forEl) {\n        this.forElement_ = forEl;\n        forEl.addEventListener('click', this.handleForClick_.bind(this));\n        forEl.addEventListener('keydown',\n            this.handleForKeyboardEvent_.bind(this));\n      }\n    }\n\n    var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n\n    for (var i = 0; i < items.length; i++) {\n      // Add a listener to each menu item.\n      items[i].addEventListener('click', this.handleItemClick_.bind(this));\n      // Add a tab index to each menu item.\n      items[i].tabIndex = '-1';\n      // Add a keyboard listener to each menu item.\n      items[i].addEventListener('keydown',\n          this.handleItemKeyboardEvent_.bind(this));\n    }\n\n    // Add ripple classes to each item, if the user has enabled ripples.\n    if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n      this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n\n      for (i = 0; i < items.length; i++) {\n        var item = items[i];\n\n        var rippleContainer = document.createElement('span');\n        rippleContainer.classList.add(this.CssClasses_.ITEM_RIPPLE_CONTAINER);\n\n        var ripple = document.createElement('span');\n        ripple.classList.add(this.CssClasses_.RIPPLE);\n        rippleContainer.appendChild(ripple);\n\n        item.appendChild(rippleContainer);\n        item.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n      }\n    }\n\n    // Copy alignment classes to the container, so the outline can use them.\n    if (this.element_.classList.contains(this.CssClasses_.BOTTOM_LEFT)) {\n      this.outline_.classList.add(this.CssClasses_.BOTTOM_LEFT);\n    }\n    if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n      this.outline_.classList.add(this.CssClasses_.BOTTOM_RIGHT);\n    }\n    if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n      this.outline_.classList.add(this.CssClasses_.TOP_LEFT);\n    }\n    if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n      this.outline_.classList.add(this.CssClasses_.TOP_RIGHT);\n    }\n    if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n      this.outline_.classList.add(this.CssClasses_.UNALIGNED);\n    }\n\n    container.classList.add(this.CssClasses_.IS_UPGRADED);\n  }\n};\n\n/**\n * Handles a click on the \"for\" element, by positioning the menu and then\n * toggling it.\n * @private\n */\nMaterialMenu.prototype.handleForClick_ = function(evt) {\n  'use strict';\n\n  if (this.element_ && this.forElement_) {\n    var rect = this.forElement_.getBoundingClientRect();\n    var forRect = this.forElement_.parentElement.getBoundingClientRect();\n\n    if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n      // Do not position the menu automatically. Requires the developer to\n      // manually specify position.\n    } else if (this.element_.classList.contains(\n        this.CssClasses_.BOTTOM_RIGHT)) {\n      // Position below the \"for\" element, aligned to its right.\n      this.container_.style.right = (forRect.right - rect.right) + 'px';\n      this.container_.style.top =\n          this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';\n    } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n      // Position above the \"for\" element, aligned to its left.\n      this.container_.style.left = this.forElement_.offsetLeft + 'px';\n      this.container_.style.bottom = (forRect.bottom - rect.top) + 'px';\n    } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n      // Position above the \"for\" element, aligned to its right.\n      this.container_.style.right = (forRect.right - rect.right) + 'px';\n      this.container_.style.bottom = (forRect.bottom - rect.top) + 'px';\n    } else {\n      // Default: position below the \"for\" element, aligned to its left.\n      this.container_.style.left = this.forElement_.offsetLeft + 'px';\n      this.container_.style.top =\n          this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';\n    }\n  }\n\n  this.toggle(evt);\n};\n\n/**\n * Handles a keyboard event on the \"for\" element.\n * @private\n */\nMaterialMenu.prototype.handleForKeyboardEvent_ = function(evt) {\n  'use strict';\n\n  if (this.element_ && this.container_ && this.forElement_) {\n    var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM +\n      ':not([disabled])');\n\n    if (items && items.length > 0 &&\n        this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n      if (evt.keyCode === this.Keycodes_.UP_ARROW) {\n        evt.preventDefault();\n        items[items.length - 1].focus();\n      } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {\n        evt.preventDefault();\n        items[0].focus();\n      }\n    }\n  }\n};\n\n/**\n * Handles a keyboard event on an item.\n * @private\n */\nMaterialMenu.prototype.handleItemKeyboardEvent_ = function(evt) {\n  'use strict';\n\n  if (this.element_ && this.container_) {\n    var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM +\n      ':not([disabled])');\n\n    if (items && items.length > 0 &&\n        this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n      var currentIndex = Array.prototype.slice.call(items).indexOf(evt.target);\n\n      if (evt.keyCode === this.Keycodes_.UP_ARROW) {\n        evt.preventDefault();\n        if (currentIndex > 0) {\n          items[currentIndex - 1].focus();\n        } else {\n          items[items.length - 1].focus();\n        }\n      } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {\n        evt.preventDefault();\n        if (items.length > currentIndex + 1) {\n          items[currentIndex + 1].focus();\n        } else {\n          items[0].focus();\n        }\n      } else if (evt.keyCode === this.Keycodes_.SPACE ||\n            evt.keyCode === this.Keycodes_.ENTER) {\n        evt.preventDefault();\n        // Send mousedown and mouseup to trigger ripple.\n        var e = new MouseEvent('mousedown');\n        evt.target.dispatchEvent(e);\n        e = new MouseEvent('mouseup');\n        evt.target.dispatchEvent(e);\n        // Send click.\n        evt.target.click();\n      } else if (evt.keyCode === this.Keycodes_.ESCAPE) {\n        evt.preventDefault();\n        this.hide();\n      }\n    }\n  }\n};\n\n/**\n * Handles a click event on an item.\n * @private\n */\nMaterialMenu.prototype.handleItemClick_ = function(evt) {\n  'use strict';\n\n  if (evt.target.getAttribute('disabled') !== null) {\n    evt.stopPropagation();\n  } else {\n    // Wait some time before closing menu, so the user can see the ripple.\n    this.closing_ = true;\n    window.setTimeout(function(evt) {\n      this.hide();\n      this.closing_ = false;\n    }.bind(this), this.Constant_.CLOSE_TIMEOUT);\n  }\n};\n\n/**\n * Calculates the initial clip (for opening the menu) or final clip (for closing\n * it), and applies it. This allows us to animate from or to the correct point,\n * that is, the point it's aligned to in the \"for\" element.\n * @private\n */\nMaterialMenu.prototype.applyClip_ = function(height, width) {\n  'use strict';\n\n  if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n    // Do not clip.\n    this.element_.style.clip = null;\n  } else if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n    // Clip to the top right corner of the menu.\n    this.element_.style.clip =\n        'rect(0 ' + width + 'px ' + '0 ' + width + 'px)';\n  } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n    // Clip to the bottom left corner of the menu.\n    this.element_.style.clip =\n        'rect(' + height + 'px 0 ' + height + 'px 0)';\n  } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n    // Clip to the bottom right corner of the menu.\n    this.element_.style.clip = 'rect(' + height + 'px ' + width + 'px ' +\n        height + 'px ' + width + 'px)';\n  } else {\n    // Default: do not clip (same as clipping to the top left corner).\n    this.element_.style.clip = null;\n  }\n};\n\n/**\n * Adds an event listener to clean up after the animation ends.\n * @private\n */\nMaterialMenu.prototype.addAnimationEndListener_ = function() {\n  'use strict';\n\n  var cleanup = function() {\n    this.element_.classList.remove(this.CssClasses_.IS_ANIMATING);\n  }.bind(this);\n\n  // Remove animation class once the transition is done.\n  this.element_.addEventListener('transitionend', cleanup);\n  this.element_.addEventListener('webkitTransitionEnd', cleanup);\n};\n\n/**\n * Displays the menu.\n * @public\n */\nMaterialMenu.prototype.show = function(evt) {\n  'use strict';\n\n  if (this.element_ && this.container_ && this.outline_) {\n    // Measure the inner element.\n    var height = this.element_.getBoundingClientRect().height;\n    var width = this.element_.getBoundingClientRect().width;\n\n    // Apply the inner element's size to the container and outline.\n    this.container_.style.width = width + 'px';\n    this.container_.style.height = height + 'px';\n    this.outline_.style.width = width + 'px';\n    this.outline_.style.height = height + 'px';\n\n    var transitionDuration = this.Constant_.TRANSITION_DURATION_SECONDS *\n        this.Constant_.TRANSITION_DURATION_FRACTION;\n\n    // Calculate transition delays for individual menu items, so that they fade\n    // in one at a time.\n    var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n    for (var i = 0; i < items.length; i++) {\n      var itemDelay = null;\n      if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT) ||\n          this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n        itemDelay = ((height - items[i].offsetTop - items[i].offsetHeight) /\n            height * transitionDuration) + 's';\n      } else {\n        itemDelay = (items[i].offsetTop / height * transitionDuration) + 's';\n      }\n      items[i].style.transitionDelay = itemDelay;\n    }\n\n    // Apply the initial clip to the text before we start animating.\n    this.applyClip_(height, width);\n\n    // Wait for the next frame, turn on animation, and apply the final clip.\n    // Also make it visible. This triggers the transitions.\n    window.requestAnimationFrame(function() {\n      this.element_.classList.add(this.CssClasses_.IS_ANIMATING);\n      this.element_.style.clip = 'rect(0 ' + width + 'px ' + height + 'px 0)';\n      this.container_.classList.add(this.CssClasses_.IS_VISIBLE);\n    }.bind(this));\n\n    // Clean up after the animation is complete.\n    this.addAnimationEndListener_();\n\n    // Add a click listener to the document, to close the menu.\n    var callback = function(e) {\n      // Check to see if the document is processing the same event that\n      // displayed the menu in the first place. If so, do nothing.\n      // Also check to see if the menu is in the process of closing itself, and\n      // do nothing in that case.\n      if (e !== evt && !this.closing_) {\n        document.removeEventListener('click', callback);\n        this.hide();\n      }\n    }.bind(this);\n    document.addEventListener('click', callback);\n  }\n};\n\n/**\n * Hides the menu.\n * @public\n */\nMaterialMenu.prototype.hide = function() {\n  'use strict';\n\n  if (this.element_ && this.container_ && this.outline_) {\n    var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n\n    // Remove all transition delays; menu items fade out concurrently.\n    for (var i = 0; i < items.length; i++) {\n      items[i].style.transitionDelay = null;\n    }\n\n    // Measure the inner element.\n    var height = this.element_.getBoundingClientRect().height;\n    var width = this.element_.getBoundingClientRect().width;\n\n    // Turn on animation, and apply the final clip. Also make invisible.\n    // This triggers the transitions.\n    this.element_.classList.add(this.CssClasses_.IS_ANIMATING);\n    this.applyClip_(height, width);\n    this.container_.classList.remove(this.CssClasses_.IS_VISIBLE);\n\n    // Clean up after the animation is complete.\n    this.addAnimationEndListener_();\n  }\n};\n\n/**\n * Displays or hides the menu, depending on current state.\n * @public\n */\nMaterialMenu.prototype.toggle = function(evt) {\n  'use strict';\n\n  if (this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n    this.hide();\n  } else {\n    this.show(evt);\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialMenu,\n  classAsString: 'MaterialMenu',\n  cssClass: 'mdl-js-menu'\n});\n\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Progress MDL component.\n * Implements MDL component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialProgress(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialProgress.prototype.Constant_ = {\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialProgress.prototype.CssClasses_ = {\n  INDETERMINATE_CLASS: 'mdl-progress__indeterminate'\n};\n\nMaterialProgress.prototype.setProgress = function(p) {\n  'use strict';\n\n  if (this.element_.classList.contains(this.CssClasses_.INDETERMINATE_CLASS)) {\n    return;\n  }\n\n  this.progressbar_.style.width = p + '%';\n};\n\nMaterialProgress.prototype.setBuffer = function(p) {\n  'use strict';\n\n  this.bufferbar_.style.width = p + '%';\n  this.auxbar_.style.width = (100-p) + '%';\n};\n\n/**\n * Initialize element.\n */\nMaterialProgress.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    var el = document.createElement('div');\n    el.className = 'progressbar bar bar1';\n    this.element_.appendChild(el);\n    this.progressbar_ = el;\n\n    el = document.createElement('div');\n    el.className = 'bufferbar bar bar2';\n    this.element_.appendChild(el);\n    this.bufferbar_ = el;\n\n    el = document.createElement('div');\n    el.className = 'auxbar bar bar3';\n    this.element_.appendChild(el);\n    this.auxbar_ = el;\n\n    this.progressbar_.style.width = '0%';\n    this.bufferbar_.style.width = '100%';\n    this.auxbar_.style.width = '0%';\n\n    this.element_.classList.add('is-upgraded');\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialProgress,\n  classAsString: 'MaterialProgress',\n  cssClass: 'mdl-js-progress'\n});\n\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Radio MDL component.\n * Implements MDL component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialRadio(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialRadio.prototype.Constant_ = {\n  TINY_TIMEOUT: 0.001\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialRadio.prototype.CssClasses_ = {\n  IS_FOCUSED: 'is-focused',\n  IS_DISABLED: 'is-disabled',\n  IS_CHECKED: 'is-checked',\n  IS_UPGRADED: 'is-upgraded',\n  JS_RADIO: 'mdl-js-radio',\n  RADIO_BTN: 'mdl-radio__button',\n  RADIO_OUTER_CIRCLE: 'mdl-radio__outer-circle',\n  RADIO_INNER_CIRCLE: 'mdl-radio__inner-circle',\n  RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n  RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n  RIPPLE_CONTAINER: 'mdl-radio__ripple-container',\n  RIPPLE_CENTER: 'mdl-ripple--center',\n  RIPPLE: 'mdl-ripple'\n};\n\n/**\n * Handle change of state.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialRadio.prototype.onChange_ = function(event) {\n  'use strict';\n\n  this.updateClasses_(this.btnElement_, this.element_);\n\n  // Since other radio buttons don't get change events, we need to look for\n  // them to update their classes.\n  var radios = document.getElementsByClassName(this.CssClasses_.JS_RADIO);\n  for (var i = 0; i < radios.length; i++) {\n    var button = radios[i].querySelector('.' + this.CssClasses_.RADIO_BTN);\n    // Different name == different group, so no point updating those.\n    if (button.getAttribute('name') === this.btnElement_.getAttribute('name')) {\n      this.updateClasses_(button, radios[i]);\n    }\n  }\n};\n\n/**\n * Handle focus.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialRadio.prototype.onFocus_ = function(event) {\n  'use strict';\n\n  this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n\n/**\n * Handle lost focus.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialRadio.prototype.onBlur_ = function(event) {\n  'use strict';\n\n  this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n\n/**\n * Handle mouseup.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialRadio.prototype.onMouseup_ = function(event) {\n  'use strict';\n\n  this.blur_();\n};\n\n/**\n * Update classes.\n * @param {HTMLElement} button The button whose classes we should update.\n * @param {HTMLElement} label The label whose classes we should update.\n * @private\n */\nMaterialRadio.prototype.updateClasses_ = function(button, label) {\n  'use strict';\n\n  if (button.disabled) {\n    label.classList.add(this.CssClasses_.IS_DISABLED);\n  } else {\n    label.classList.remove(this.CssClasses_.IS_DISABLED);\n  }\n\n  if (button.checked) {\n    label.classList.add(this.CssClasses_.IS_CHECKED);\n  } else {\n    label.classList.remove(this.CssClasses_.IS_CHECKED);\n  }\n};\n\n/**\n * Add blur.\n * @private\n */\nMaterialRadio.prototype.blur_ = function(event) {\n  'use strict';\n\n  // TODO: figure out why there's a focus event being fired after our blur,\n  // so that we can avoid this hack.\n  window.setTimeout(function() {\n    this.btnElement_.blur();\n  }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n\n// Public methods.\n\n/**\n * Disable radio.\n * @public\n */\nMaterialRadio.prototype.disable = function() {\n  'use strict';\n\n  this.btnElement_.disabled = true;\n  this.updateClasses_(this.btnElement_, this.element_);\n};\n\n/**\n * Enable radio.\n * @public\n */\nMaterialRadio.prototype.enable = function() {\n  'use strict';\n\n  this.btnElement_.disabled = false;\n  this.updateClasses_(this.btnElement_, this.element_);\n};\n\n/**\n * Check radio.\n * @public\n */\nMaterialRadio.prototype.check = function() {\n  'use strict';\n\n  this.btnElement_.checked = true;\n  this.updateClasses_(this.btnElement_, this.element_);\n};\n\n/**\n * Uncheck radio.\n * @public\n */\nMaterialRadio.prototype.uncheck = function() {\n  'use strict';\n\n  this.btnElement_.checked = false;\n  this.updateClasses_(this.btnElement_, this.element_);\n};\n\n/**\n * Initialize element.\n */\nMaterialRadio.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    this.btnElement_ = this.element_.querySelector('.' +\n        this.CssClasses_.RADIO_BTN);\n\n    var outerCircle = document.createElement('span');\n    outerCircle.classList.add(this.CssClasses_.RADIO_OUTER_CIRCLE);\n\n    var innerCircle = document.createElement('span');\n    innerCircle.classList.add(this.CssClasses_.RADIO_INNER_CIRCLE);\n\n    this.element_.appendChild(outerCircle);\n    this.element_.appendChild(innerCircle);\n\n    var rippleContainer;\n    if (this.element_.classList.contains(\n        this.CssClasses_.RIPPLE_EFFECT)) {\n      this.element_.classList.add(\n          this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n      rippleContainer = document.createElement('span');\n      rippleContainer.classList.add(\n          this.CssClasses_.RIPPLE_CONTAINER);\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_CENTER);\n      rippleContainer.addEventListener('mouseup', this.onMouseup_.bind(this));\n\n      var ripple = document.createElement('span');\n      ripple.classList.add(this.CssClasses_.RIPPLE);\n\n      rippleContainer.appendChild(ripple);\n      this.element_.appendChild(rippleContainer);\n    }\n\n    this.btnElement_.addEventListener('change', this.onChange_.bind(this));\n    this.btnElement_.addEventListener('focus', this.onFocus_.bind(this));\n    this.btnElement_.addEventListener('blur', this.onBlur_.bind(this));\n    this.element_.addEventListener('mouseup', this.onMouseup_.bind(this));\n\n    this.updateClasses_(this.btnElement_, this.element_);\n    this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialRadio,\n  classAsString: 'MaterialRadio',\n  cssClass: 'mdl-js-radio'\n});\n\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Slider MDL component.\n * Implements MDL component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialSlider(element) {\n  'use strict';\n\n  this.element_ = element;\n  // Browser feature detection.\n  this.isIE_ = window.navigator.msPointerEnabled;\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialSlider.prototype.Constant_ = {\n  // None for now.\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialSlider.prototype.CssClasses_ = {\n  IE_CONTAINER: 'mdl-slider__ie-container',\n  SLIDER_CONTAINER: 'mdl-slider__container',\n  BACKGROUND_FLEX: 'mdl-slider__background-flex',\n  BACKGROUND_LOWER: 'mdl-slider__background-lower',\n  BACKGROUND_UPPER: 'mdl-slider__background-upper',\n  IS_LOWEST_VALUE: 'is-lowest-value',\n  IS_UPGRADED: 'is-upgraded'\n};\n\n/**\n * Handle input on element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialSlider.prototype.onInput_ = function(event) {\n  'use strict';\n\n  this.updateValueStyles_();\n};\n\n/**\n * Handle change on element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialSlider.prototype.onChange_ = function(event) {\n  'use strict';\n\n  this.updateValueStyles_();\n};\n\n/**\n * Handle mouseup on element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialSlider.prototype.onMouseUp_ = function(event) {\n  'use strict';\n\n  event.target.blur();\n};\n\n/**\n * Handle updating of values.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialSlider.prototype.updateValueStyles_ = function(event) {\n  'use strict';\n\n  // Calculate and apply percentages to div structure behind slider.\n  var fraction = (this.element_.value - this.element_.min) /\n      (this.element_.max - this.element_.min);\n\n  if (fraction === 0) {\n    this.element_.classList.add(this.CssClasses_.IS_LOWEST_VALUE);\n  } else {\n    this.element_.classList.remove(this.CssClasses_.IS_LOWEST_VALUE);\n  }\n\n  if (!this.isIE_) {\n    this.backgroundLower_.style.flex = fraction;\n    this.backgroundLower_.style.webkitFlex = fraction;\n    this.backgroundUpper_.style.flex = 1 - fraction;\n    this.backgroundUpper_.style.webkitFlex = 1 - fraction;\n  }\n};\n\n// Public methods.\n\n/**\n * Disable slider.\n * @public\n */\nMaterialSlider.prototype.disable = function() {\n  'use strict';\n\n  this.element_.disabled = true;\n};\n\n/**\n * Enable slider.\n * @public\n */\nMaterialSlider.prototype.enable = function() {\n  'use strict';\n\n  this.element_.disabled = false;\n};\n\n/**\n * Update slider value.\n * @param {Number} value The value to which to set the control (optional).\n * @public\n */\nMaterialSlider.prototype.change = function(value) {\n  'use strict';\n\n  if (value) {\n    this.element_.value = value;\n  }\n  this.updateValueStyles_();\n};\n\n/**\n * Initialize element.\n */\nMaterialSlider.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    if (this.isIE_) {\n      // Since we need to specify a very large height in IE due to\n      // implementation limitations, we add a parent here that trims it down to\n      // a reasonable size.\n      var containerIE = document.createElement('div');\n      containerIE.classList.add(this.CssClasses_.IE_CONTAINER);\n      this.element_.parentElement.insertBefore(containerIE, this.element_);\n      this.element_.parentElement.removeChild(this.element_);\n      containerIE.appendChild(this.element_);\n    } else {\n      // For non-IE browsers, we need a div structure that sits behind the\n      // slider and allows us to style the left and right sides of it with\n      // different colors.\n      var container = document.createElement('div');\n      container.classList.add(this.CssClasses_.SLIDER_CONTAINER);\n      this.element_.parentElement.insertBefore(container, this.element_);\n      this.element_.parentElement.removeChild(this.element_);\n      container.appendChild(this.element_);\n      var backgroundFlex = document.createElement('div');\n      backgroundFlex.classList.add(this.CssClasses_.BACKGROUND_FLEX);\n      container.appendChild(backgroundFlex);\n      this.backgroundLower_ = document.createElement('div');\n      this.backgroundLower_.classList.add(this.CssClasses_.BACKGROUND_LOWER);\n      backgroundFlex.appendChild(this.backgroundLower_);\n      this.backgroundUpper_ = document.createElement('div');\n      this.backgroundUpper_.classList.add(this.CssClasses_.BACKGROUND_UPPER);\n      backgroundFlex.appendChild(this.backgroundUpper_);\n    }\n\n    this.element_.addEventListener('input', this.onInput_.bind(this));\n    this.element_.addEventListener('change', this.onChange_.bind(this));\n    this.element_.addEventListener('mouseup', this.onMouseUp_.bind(this));\n\n    this.updateValueStyles_();\n    this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialSlider,\n  classAsString: 'MaterialSlider',\n  cssClass: 'mdl-js-slider'\n});\n\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Spinner MDL component.\n * Implements MDL component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialSpinner(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialSpinner.prototype.Constant_ = {\n  MDL_SPINNER_LAYER_COUNT: 4\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialSpinner.prototype.CssClasses_ = {\n  MDL_SPINNER_LAYER: 'mdl-spinner__layer',\n  MDL_SPINNER_CIRCLE_CLIPPER: 'mdl-spinner__circle-clipper',\n  MDL_SPINNER_CIRCLE: 'mdl-spinner__circle',\n  MDL_SPINNER_GAP_PATCH: 'mdl-spinner__gap-patch',\n  MDL_SPINNER_LEFT: 'mdl-spinner__left',\n  MDL_SPINNER_RIGHT: 'mdl-spinner__right'\n};\n\n/**\n* Auxiliary method to create a spinner layer.\n*/\nMaterialSpinner.prototype.createLayer = function(index) {\n  'use strict';\n\n  var layer = document.createElement('div');\n  layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER);\n  layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER + '-' + index);\n\n  var leftClipper = document.createElement('div');\n  leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);\n  leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_LEFT);\n\n  var gapPatch = document.createElement('div');\n  gapPatch.classList.add(this.CssClasses_.MDL_SPINNER_GAP_PATCH);\n\n  var rightClipper = document.createElement('div');\n  rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);\n  rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_RIGHT);\n\n  var circleOwners = [leftClipper, gapPatch, rightClipper];\n\n  for (var i = 0; i < circleOwners.length; i++) {\n    var circle = document.createElement('div');\n    circle.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE);\n    circleOwners[i].appendChild(circle);\n  }\n\n  layer.appendChild(leftClipper);\n  layer.appendChild(gapPatch);\n  layer.appendChild(rightClipper);\n\n  this.element_.appendChild(layer);\n};\n\n/**\n* Stops the spinner animation.\n* Public method for users who need to stop the spinner for any reason.\n* @public\n*/\nMaterialSpinner.prototype.stop = function() {\n  'use strict';\n\n  this.element_.classList.remove('is-active');\n};\n\n/**\n* Starts the spinner animation.\n* Public method for users who need to manually start the spinner for any reason\n* (instead of just adding the 'is-active' class to their markup).\n* @public\n*/\nMaterialSpinner.prototype.start = function() {\n  'use strict';\n\n  this.element_.classList.add('is-active');\n};\n\n/**\n * Initialize element.\n */\nMaterialSpinner.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    for (var i = 1; i <= this.Constant_.MDL_SPINNER_LAYER_COUNT; i++) {\n      this.createLayer(i);\n    }\n\n    this.element_.classList.add('is-upgraded');\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialSpinner,\n  classAsString: 'MaterialSpinner',\n  cssClass: 'mdl-js-spinner'\n});\n\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Checkbox MDL component.\n * Implements MDL component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialSwitch(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialSwitch.prototype.Constant_ = {\n  TINY_TIMEOUT: 0.001\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialSwitch.prototype.CssClasses_ = {\n  INPUT: 'mdl-switch__input',\n  TRACK: 'mdl-switch__track',\n  THUMB: 'mdl-switch__thumb',\n  FOCUS_HELPER: 'mdl-switch__focus-helper',\n  RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n  RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n  RIPPLE_CONTAINER: 'mdl-switch__ripple-container',\n  RIPPLE_CENTER: 'mdl-ripple--center',\n  RIPPLE: 'mdl-ripple',\n  IS_FOCUSED: 'is-focused',\n  IS_DISABLED: 'is-disabled',\n  IS_CHECKED: 'is-checked'\n};\n\n/**\n * Handle change of state.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialSwitch.prototype.onChange_ = function(event) {\n  'use strict';\n\n  this.updateClasses_();\n};\n\n/**\n * Handle focus of element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialSwitch.prototype.onFocus_ = function(event) {\n  'use strict';\n\n  this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n\n/**\n * Handle lost focus of element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialSwitch.prototype.onBlur_ = function(event) {\n  'use strict';\n\n  this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n\n/**\n * Handle mouseup.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialSwitch.prototype.onMouseUp_ = function(event) {\n  'use strict';\n\n  this.blur_();\n};\n\n/**\n * Handle class updates.\n * @param {HTMLElement} button The button whose classes we should update.\n * @param {HTMLElement} label The label whose classes we should update.\n * @private\n */\nMaterialSwitch.prototype.updateClasses_ = function() {\n  'use strict';\n\n  if (this.inputElement_.disabled) {\n    this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n  } else {\n    this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n  }\n\n  if (this.inputElement_.checked) {\n    this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n  } else {\n    this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n  }\n};\n\n/**\n * Add blur.\n * @private\n */\nMaterialSwitch.prototype.blur_ = function(event) {\n  'use strict';\n\n  // TODO: figure out why there's a focus event being fired after our blur,\n  // so that we can avoid this hack.\n  window.setTimeout(function() {\n    this.inputElement_.blur();\n  }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n\n// Public methods.\n\n/**\n * Disable switch.\n * @public\n */\nMaterialSwitch.prototype.disable = function() {\n  'use strict';\n\n  this.inputElement_.disabled = true;\n  this.updateClasses_();\n};\n\n/**\n * Enable switch.\n * @public\n */\nMaterialSwitch.prototype.enable = function() {\n  'use strict';\n\n  this.inputElement_.disabled = false;\n  this.updateClasses_();\n};\n\n/**\n * Activate switch.\n * @public\n */\nMaterialSwitch.prototype.on = function() {\n  'use strict';\n\n  this.inputElement_.checked = true;\n  this.updateClasses_();\n};\n\n/**\n * Deactivate switch.\n * @public\n */\nMaterialSwitch.prototype.off = function() {\n  'use strict';\n\n  this.inputElement_.checked = false;\n  this.updateClasses_();\n};\n\n/**\n * Initialize element.\n */\nMaterialSwitch.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    this.inputElement_ = this.element_.querySelector('.' +\n        this.CssClasses_.INPUT);\n\n    var track = document.createElement('div');\n    track.classList.add(this.CssClasses_.TRACK);\n\n    var thumb = document.createElement('div');\n    thumb.classList.add(this.CssClasses_.THUMB);\n\n    var focusHelper = document.createElement('span');\n    focusHelper.classList.add(this.CssClasses_.FOCUS_HELPER);\n\n    thumb.appendChild(focusHelper);\n\n    this.element_.appendChild(track);\n    this.element_.appendChild(thumb);\n\n    var rippleContainer;\n    if (this.element_.classList.contains(\n        this.CssClasses_.RIPPLE_EFFECT)) {\n      this.element_.classList.add(\n          this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n      rippleContainer = document.createElement('span');\n      rippleContainer.classList.add(\n          this.CssClasses_.RIPPLE_CONTAINER);\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_CENTER);\n      rippleContainer.addEventListener('mouseup', this.onMouseUp_.bind(this));\n\n      var ripple = document.createElement('span');\n      ripple.classList.add(this.CssClasses_.RIPPLE);\n\n      rippleContainer.appendChild(ripple);\n      this.element_.appendChild(rippleContainer);\n    }\n\n    this.inputElement_.addEventListener('change', this.onChange_.bind(this));\n    this.inputElement_.addEventListener('focus', this.onFocus_.bind(this));\n    this.inputElement_.addEventListener('blur', this.onBlur_.bind(this));\n    this.element_.addEventListener('mouseup', this.onMouseUp_.bind(this));\n\n    this.updateClasses_();\n    this.element_.classList.add('is-upgraded');\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialSwitch,\n  classAsString: 'MaterialSwitch',\n  cssClass: 'mdl-js-switch'\n});\n\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Tabs MDL component.\n * Implements MDL component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialTabs(element) {\n  'use strict';\n\n  // Stores the HTML element.\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string}\n * @private\n */\nMaterialTabs.prototype.Constant_ = {\n  // None at the moment.\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialTabs.prototype.CssClasses_ = {\n  TAB_CLASS: 'mdl-tabs__tab',\n  PANEL_CLASS: 'mdl-tabs__panel',\n  ACTIVE_CLASS: 'is-active',\n  UPGRADED_CLASS: 'is-upgraded',\n\n  MDL_JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n  MDL_RIPPLE_CONTAINER: 'mdl-tabs__ripple-container',\n  MDL_RIPPLE: 'mdl-ripple',\n  MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events'\n};\n\n/**\n * Handle clicks to a tabs component\n * @private\n */\nMaterialTabs.prototype.initTabs_ = function(e) {\n  'use strict';\n\n  if (this.element_.classList.contains(this.CssClasses_.MDL_JS_RIPPLE_EFFECT)) {\n    this.element_.classList.add(\n      this.CssClasses_.MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS);\n  }\n\n  // Select element tabs, document panels\n  this.tabs_ = this.element_.querySelectorAll('.' + this.CssClasses_.TAB_CLASS);\n  this.panels_ =\n      this.element_.querySelectorAll('.' + this.CssClasses_.PANEL_CLASS);\n\n  // Create new tabs for each tab element\n  for (var i = 0; i < this.tabs_.length; i++) {\n    new MaterialTab(this.tabs_[i], this);\n  }\n\n  this.element_.classList.add(this.CssClasses_.UPGRADED_CLASS);\n};\n\n/**\n * Reset tab state, dropping active classes\n * @private\n */\nMaterialTabs.prototype.resetTabState_ = function() {\n  'use strict';\n\n  for (var k = 0; k < this.tabs_.length; k++) {\n    this.tabs_[k].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n  }\n};\n\n/**\n * Reset panel state, droping active classes\n * @private\n */\nMaterialTabs.prototype.resetPanelState_ = function() {\n  'use strict';\n\n  for (var j = 0; j < this.panels_.length; j++) {\n    this.panels_[j].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n  }\n};\n\nMaterialTabs.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    this.initTabs_();\n  }\n};\n\nfunction MaterialTab(tab, ctx) {\n  'use strict';\n\n  if (tab) {\n    if (ctx.element_.classList.contains(ctx.CssClasses_.MDL_JS_RIPPLE_EFFECT)) {\n      var rippleContainer = document.createElement('span');\n      rippleContainer.classList.add(ctx.CssClasses_.MDL_RIPPLE_CONTAINER);\n      rippleContainer.classList.add(ctx.CssClasses_.MDL_JS_RIPPLE_EFFECT);\n      var ripple = document.createElement('span');\n      ripple.classList.add(ctx.CssClasses_.MDL_RIPPLE);\n      rippleContainer.appendChild(ripple);\n      tab.appendChild(rippleContainer);\n    }\n\n    tab.addEventListener('click', function(e) {\n      e.preventDefault();\n      var href = tab.href.split('#')[1];\n      var panel = ctx.element_.querySelector('#' + href);\n      ctx.resetTabState_();\n      ctx.resetPanelState_();\n      tab.classList.add(ctx.CssClasses_.ACTIVE_CLASS);\n      panel.classList.add(ctx.CssClasses_.ACTIVE_CLASS);\n    });\n\n  }\n}\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialTabs,\n  classAsString: 'MaterialTabs',\n  cssClass: 'mdl-js-tabs'\n});\n\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Textfield MDL component.\n * Implements MDL component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialTextfield(element) {\n  'use strict';\n\n  this.element_ = element;\n  this.maxRows = this.Constant_.NO_MAX_ROWS;\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialTextfield.prototype.Constant_ = {\n  NO_MAX_ROWS: -1,\n  MAX_ROWS_ATTRIBUTE: 'maxrows'\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialTextfield.prototype.CssClasses_ = {\n  LABEL: 'mdl-textfield__label',\n  INPUT: 'mdl-textfield__input',\n  IS_DIRTY: 'is-dirty',\n  IS_FOCUSED: 'is-focused',\n  IS_DISABLED: 'is-disabled',\n  IS_INVALID: 'is-invalid',\n  IS_UPGRADED: 'is-upgraded'\n};\n\n/**\n * Handle input being entered.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialTextfield.prototype.onKeyDown_ = function(event) {\n  'use strict';\n\n  var currentRowCount = event.target.value.split('\\n').length;\n  if (event.keyCode === 13) {\n    if (currentRowCount >= this.maxRows) {\n      event.preventDefault();\n    }\n  }\n};\n\n/**\n * Handle focus.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialTextfield.prototype.onFocus_ = function(event) {\n  'use strict';\n\n  this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n\n/**\n * Handle lost focus.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialTextfield.prototype.onBlur_ = function(event) {\n  'use strict';\n\n  this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n\n/**\n * Handle class updates.\n * @param {HTMLElement} button The button whose classes we should update.\n * @param {HTMLElement} label The label whose classes we should update.\n * @private\n */\nMaterialTextfield.prototype.updateClasses_ = function() {\n  'use strict';\n\n  if (this.input_.disabled) {\n    this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n  } else {\n    this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n  }\n\n  if (this.input_.validity.valid) {\n    this.element_.classList.remove(this.CssClasses_.IS_INVALID);\n  } else {\n    this.element_.classList.add(this.CssClasses_.IS_INVALID);\n  }\n\n  if (this.input_.value && this.input_.value.length > 0) {\n    this.element_.classList.add(this.CssClasses_.IS_DIRTY);\n  } else {\n    this.element_.classList.remove(this.CssClasses_.IS_DIRTY);\n  }\n};\n\n// Public methods.\n\n/**\n * Disable text field.\n * @public\n */\nMaterialTextfield.prototype.disable = function() {\n  'use strict';\n\n  this.input_.disabled = true;\n  this.updateClasses_();\n};\n\n/**\n * Enable text field.\n * @public\n */\nMaterialTextfield.prototype.enable = function() {\n  'use strict';\n\n  this.input_.disabled = false;\n  this.updateClasses_();\n};\n\n/**\n * Update text field value.\n * @param {String} value The value to which to set the control (optional).\n * @public\n */\nMaterialTextfield.prototype.change = function(value) {\n  'use strict';\n\n  if (value) {\n    this.input_.value = value;\n  }\n  this.updateClasses_();\n};\n\n/**\n * Initialize element.\n */\nMaterialTextfield.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    this.label_ = this.element_.querySelector('.' + this.CssClasses_.LABEL);\n    this.input_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n\n    if (this.input_) {\n      if (this.input_.hasAttribute(this.Constant_.MAX_ROWS_ATTRIBUTE)) {\n        this.maxRows = parseInt(this.input_.getAttribute(\n            this.Constant_.MAX_ROWS_ATTRIBUTE), 10);\n        if (isNaN(this.maxRows)) {\n          this.maxRows = this.Constant_.NO_MAX_ROWS;\n        }\n      }\n\n      this.input_.addEventListener('input', this.updateClasses_.bind(this));\n      this.input_.addEventListener('focus', this.onFocus_.bind(this));\n      this.input_.addEventListener('blur', this.onBlur_.bind(this));\n\n      if (this.maxRows !== this.Constant_.NO_MAX_ROWS) {\n        // TODO: This should handle pasting multi line text.\n        // Currently doesn't.\n        this.input_.addEventListener('keydown', this.onKeyDown_.bind(this));\n      }\n\n      this.updateClasses_();\n      this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialTextfield,\n  classAsString: 'MaterialTextfield',\n  cssClass: 'mdl-js-textfield'\n});\n\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Tooltip MDL component.\n * Implements MDL component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialTooltip(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialTooltip.prototype.Constant_ = {\n  // None for now.\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialTooltip.prototype.CssClasses_ = {\n  IS_ACTIVE: 'is-active'\n};\n\n\n/**\n * Handle mouseenter for tooltip.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialTooltip.prototype.handleMouseEnter_ = function(event) {\n  'use strict';\n\n  event.stopPropagation();\n  var props = event.target.getBoundingClientRect();\n  this.element_.style.left = props.left + (props.width / 2) + 'px';\n  this.element_.style.marginLeft = -1 * (this.element_.offsetWidth / 2) + 'px';\n  this.element_.style.top = props.top + props.height + 10 + 'px';\n  this.element_.classList.add(this.CssClasses_.IS_ACTIVE);\n};\n\n\n/**\n * Handle mouseleave for tooltip.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialTooltip.prototype.handleMouseLeave_ = function(event) {\n  'use strict';\n\n  event.stopPropagation();\n  this.element_.classList.remove(this.CssClasses_.IS_ACTIVE);\n};\n\n\n/**\n * Initialize element.\n */\nMaterialTooltip.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    var forElId = this.element_.getAttribute('for');\n    var forEl = null;\n\n    if (forElId) {\n      forEl = document.getElementById(forElId);\n    }\n\n    if (forEl) {\n      forEl.addEventListener('mouseenter', this.handleMouseEnter_.bind(this),\n          false);\n      forEl.addEventListener('mouseleave', this.handleMouseLeave_.bind(this));\n    }\n  }\n};\n\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialTooltip,\n  classAsString: 'MaterialTooltip',\n  cssClass: 'mdl-tooltip'\n});\n\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Layout MDL component.\n * Implements MDL component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialLayout(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialLayout.prototype.Constant_ = {\n  MAX_WIDTH: '(max-width: 850px)'\n};\n\n/**\n * Modes.\n * @enum {number}\n * @private\n */\nMaterialLayout.prototype.Mode_ = {\n  STANDARD: 0,\n  SEAMED: 1,\n  WATERFALL: 2,\n  SCROLL: 3\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialLayout.prototype.CssClasses_ = {\n  HEADER: 'mdl-layout__header',\n  DRAWER: 'mdl-layout__drawer',\n  CONTENT: 'mdl-layout__content',\n  DRAWER_BTN: 'mdl-layout__drawer-button',\n\n  JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n  RIPPLE_CONTAINER: 'mdl-layout__tab-ripple-container',\n  RIPPLE: 'mdl-ripple',\n  RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n\n  HEADER_SEAMED: 'mdl-layout__header--seamed',\n  HEADER_WATERFALL: 'mdl-layout__header--waterfall',\n  HEADER_SCROLL: 'mdl-layout__header--scroll',\n\n  FIXED_HEADER: 'mdl-layout--fixed-header',\n  OBFUSCATOR: 'mdl-layout__obfuscator',\n\n  TAB_BAR: 'mdl-layout__tab-bar',\n  TAB_CONTAINER: 'mdl-layout__tab-bar-container',\n  TAB: 'mdl-layout__tab',\n  TAB_BAR_BUTTON: 'mdl-layout__tab-bar-button',\n  TAB_BAR_LEFT_BUTTON: 'mdl-layout__tab-bar-left-button',\n  TAB_BAR_RIGHT_BUTTON: 'mdl-layout__tab-bar-right-button',\n  PANEL: 'mdl-layout__tab-panel',\n\n  HAS_DRAWER_CLASS: 'has-drawer',\n  SHADOW_CLASS: 'is-casting-shadow',\n  COMPACT_CLASS: 'is-compact',\n  SMALL_SCREEN_CLASS: 'is-small-screen',\n  DRAWER_OPEN_CLASS: 'is-visible',\n  ACTIVE_CLASS: 'is-active',\n  UPGRADED_CLASS: 'is-upgraded',\n  ANIMATING_CLASS: 'is-animating'\n};\n\n/**\n * Handles scrolling on the content.\n * @private\n */\nMaterialLayout.prototype.contentScrollHandler_ = function() {\n  'use strict';\n\n  if(this.header_.classList.contains(this.CssClasses_.ANIMATING_CLASS)) {\n    return;\n  }\n\n  if (this.content_.scrollTop > 0 && !this.header_.classList.contains(this.CssClasses_.COMPACT_CLASS)) {\n    this.header_.classList.add(this.CssClasses_.SHADOW_CLASS);\n    this.header_.classList.add(this.CssClasses_.COMPACT_CLASS);\n    this.header_.classList.add(this.CssClasses_.ANIMATING_CLASS);\n  } else if (this.content_.scrollTop <= 0 && this.header_.classList.contains(this.CssClasses_.COMPACT_CLASS)) {\n    this.header_.classList.remove(this.CssClasses_.SHADOW_CLASS);\n    this.header_.classList.remove(this.CssClasses_.COMPACT_CLASS);\n    this.header_.classList.add(this.CssClasses_.ANIMATING_CLASS);\n  }\n};\n\n/**\n * Handles changes in screen size.\n * @private\n */\nMaterialLayout.prototype.screenSizeHandler_ = function() {\n  'use strict';\n\n  if (this.screenSizeMediaQuery_.matches) {\n    this.element_.classList.add(this.CssClasses_.SMALL_SCREEN_CLASS);\n  } else {\n    this.element_.classList.remove(this.CssClasses_.SMALL_SCREEN_CLASS);\n    // Collapse drawer (if any) when moving to a large screen size.\n    if (this.drawer_) {\n      this.drawer_.classList.remove(this.CssClasses_.DRAWER_OPEN_CLASS);\n    }\n  }\n};\n\n/**\n * Handles toggling of the drawer.\n * @param {Element} drawer The drawer container element.\n * @private\n */\nMaterialLayout.prototype.drawerToggleHandler_ = function() {\n  'use strict';\n\n  this.drawer_.classList.toggle(this.CssClasses_.DRAWER_OPEN_CLASS);\n};\n\n/**\n * Handles (un)setting the `is-animating` class\n */\nMaterialLayout.prototype.headerTransitionEndHandler = function() {\n  'use strict';\n\n  this.header_.classList.remove(this.CssClasses_.ANIMATING_CLASS);\n};\n\n/**\n * Handles expanding the header on click\n */\nMaterialLayout.prototype.headerClickHandler = function() {\n  'use strict';\n\n  if (this.header_.classList.contains(this.CssClasses_.COMPACT_CLASS)) {\n    this.header_.classList.remove(this.CssClasses_.COMPACT_CLASS);\n    this.header_.classList.add(this.CssClasses_.ANIMATING_CLASS);\n  }\n};\n\n/**\n * Reset tab state, dropping active classes\n * @private\n */\nMaterialLayout.prototype.resetTabState_ = function(tabBar) {\n  'use strict';\n\n  for (var k = 0; k < tabBar.length; k++) {\n    tabBar[k].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n  }\n};\n\n/**\n * Reset panel state, droping active classes\n * @private\n */\nMaterialLayout.prototype.resetPanelState_ = function(panels) {\n  'use strict';\n\n  for (var j = 0; j < panels.length; j++) {\n    panels[j].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n  }\n};\n\n/**\n * Initialize element.\n */\nMaterialLayout.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    var container = document.createElement('div');\n    container.classList.add('mdl-layout__container');\n    this.element_.parentElement.insertBefore(container, this.element_);\n    this.element_.parentElement.removeChild(this.element_);\n    container.appendChild(this.element_);\n\n    this.header_ = this.element_.querySelector('.' + this.CssClasses_.HEADER);\n    this.drawer_ = this.element_.querySelector('.' + this.CssClasses_.DRAWER);\n    this.tabBar_ = this.element_.querySelector('.' + this.CssClasses_.TAB_BAR);\n    this.content_ = this.element_.querySelector('.' + this.CssClasses_.CONTENT);\n\n    var mode = this.Mode_.STANDARD;\n\n    // Keep an eye on screen size, and add/remove auxiliary class for styling\n    // of small screens.\n    this.screenSizeMediaQuery_ = window.matchMedia(this.Constant_.MAX_WIDTH);\n    this.screenSizeMediaQuery_.addListener(this.screenSizeHandler_.bind(this));\n    this.screenSizeHandler_();\n\n    if (this.header_) {\n      if (this.header_.classList.contains(this.CssClasses_.HEADER_SEAMED)) {\n        mode = this.Mode_.SEAMED;\n      } else if (this.header_.classList.contains(\n          this.CssClasses_.HEADER_WATERFALL)) {\n        mode = this.Mode_.WATERFALL;\n        this.header_.addEventListener('transitionend',\n          this.headerTransitionEndHandler.bind(this));\n        this.header_.addEventListener('click',\n          this.headerClickHandler.bind(this));\n      } else if (this.element_.classList.contains(\n          this.CssClasses_.HEADER_SCROLL)) {\n        mode = this.Mode_.SCROLL;\n      }\n\n      if (mode === this.Mode_.STANDARD) {\n        this.header_.classList.add(this.CssClasses_.SHADOW_CLASS);\n        if (this.tabBar_) {\n          this.tabBar_.classList.add(this.CssClasses_.SHADOW_CLASS);\n        }\n      } else if (mode === this.Mode_.SEAMED || mode === this.Mode_.SCROLL) {\n        this.header_.classList.remove(this.CssClasses_.SHADOW_CLASS);\n        if (this.tabBar_) {\n          this.tabBar_.classList.remove(this.CssClasses_.SHADOW_CLASS);\n        }\n      } else if (mode === this.Mode_.WATERFALL) {\n        // Add and remove shadows depending on scroll position.\n        // Also add/remove auxiliary class for styling of the compact version of\n        // the header.\n        this.content_.addEventListener('scroll',\n            this.contentScrollHandler_.bind(this));\n        this.contentScrollHandler_();\n      }\n    }\n\n    // Add drawer toggling button to our layout, if we have an openable drawer.\n    if (this.drawer_) {\n      var drawerButton = document.createElement('div');\n      drawerButton.classList.add(this.CssClasses_.DRAWER_BTN);\n      drawerButton.addEventListener('click',\n          this.drawerToggleHandler_.bind(this));\n\n      // Add a class if the layout has a drawer, for altering the left padding.\n      // Adds the HAS_DRAWER_CLASS to the elements since this.header_ may or may\n      // not be present.\n      this.element_.classList.add(this.CssClasses_.HAS_DRAWER_CLASS);\n\n      // If we have a fixed header, add the button to the header rather than\n      // the layout.\n      if (this.element_.classList.contains(this.CssClasses_.FIXED_HEADER)) {\n        this.header_.insertBefore(drawerButton, this.header_.firstChild);\n      } else {\n        this.element_.insertBefore(drawerButton, this.content_);\n      }\n\n      var obfuscator = document.createElement('div');\n      obfuscator.classList.add(this.CssClasses_.OBFUSCATOR);\n      this.element_.appendChild(obfuscator);\n      obfuscator.addEventListener('click',\n          this.drawerToggleHandler_.bind(this));\n    }\n\n    // Initialize tabs, if any.\n    if (this.tabBar_) {\n      var tabContainer = document.createElement('div');\n      tabContainer.classList.add(this.CssClasses_.TAB_CONTAINER);\n      this.element_.insertBefore(tabContainer, this.tabBar_);\n      this.element_.removeChild(this.tabBar_);\n\n      var leftButton = document.createElement('div');\n      leftButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);\n      leftButton.classList.add(this.CssClasses_.TAB_BAR_LEFT_BUTTON);\n      leftButton.addEventListener('click', function() {\n        this.tabBar_.scrollLeft -= 100;\n      }.bind(this));\n\n      var rightButton = document.createElement('div');\n      rightButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);\n      rightButton.classList.add(this.CssClasses_.TAB_BAR_RIGHT_BUTTON);\n      rightButton.addEventListener('click', function() {\n        this.tabBar_.scrollLeft += 100;\n      }.bind(this));\n\n      tabContainer.appendChild(leftButton);\n      tabContainer.appendChild(this.tabBar_);\n      tabContainer.appendChild(rightButton);\n\n      // Add and remove buttons depending on scroll position.\n      var tabScrollHandler = function() {\n        if (this.tabBar_.scrollLeft > 0) {\n          leftButton.classList.add(this.CssClasses_.ACTIVE_CLASS);\n        } else {\n          leftButton.classList.remove(this.CssClasses_.ACTIVE_CLASS);\n        }\n\n        if (this.tabBar_.scrollLeft <\n            this.tabBar_.scrollWidth - this.tabBar_.offsetWidth) {\n          rightButton.classList.add(this.CssClasses_.ACTIVE_CLASS);\n        } else {\n          rightButton.classList.remove(this.CssClasses_.ACTIVE_CLASS);\n        }\n      }.bind(this);\n\n      this.tabBar_.addEventListener('scroll', tabScrollHandler);\n      tabScrollHandler();\n\n      if (this.tabBar_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {\n        this.tabBar_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n      }\n\n      // Select element tabs, document panels\n      var tabs = this.tabBar_.querySelectorAll('.' + this.CssClasses_.TAB);\n      var panels = this.content_.querySelectorAll('.' + this.CssClasses_.PANEL);\n\n      // Create new tabs for each tab element\n      for (var i = 0; i < tabs.length; i++) {\n        new MaterialLayoutTab(tabs[i], tabs, panels, this);\n      }\n    }\n\n    this.element_.classList.add(this.CssClasses_.UPGRADED_CLASS);\n  }\n};\n\nfunction MaterialLayoutTab(tab, tabs, panels, layout) {\n  'use strict';\n\n  if (tab) {\n    if (layout.tabBar_.classList.contains(\n        layout.CssClasses_.JS_RIPPLE_EFFECT)) {\n      var rippleContainer = document.createElement('span');\n      rippleContainer.classList.add(layout.CssClasses_.RIPPLE_CONTAINER);\n      rippleContainer.classList.add(layout.CssClasses_.JS_RIPPLE_EFFECT);\n      var ripple = document.createElement('span');\n      ripple.classList.add(layout.CssClasses_.RIPPLE);\n      rippleContainer.appendChild(ripple);\n      tab.appendChild(rippleContainer);\n    }\n\n    tab.addEventListener('click', function(e) {\n      e.preventDefault();\n      var href = tab.href.split('#')[1];\n      var panel = layout.content_.querySelector('#' + href);\n      layout.resetTabState_(tabs);\n      layout.resetPanelState_(panels);\n      tab.classList.add(layout.CssClasses_.ACTIVE_CLASS);\n      panel.classList.add(layout.CssClasses_.ACTIVE_CLASS);\n    });\n\n  }\n}\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialLayout,\n  classAsString: 'MaterialLayout',\n  cssClass: 'mdl-js-layout'\n});\n\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Ripple MDL component.\n * Implements MDL component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialRipple(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialRipple.prototype.Constant_ = {\n  INITIAL_SCALE: 'scale(0.0001, 0.0001)',\n  INITIAL_SIZE: '1px',\n  INITIAL_OPACITY: '0.4',\n  FINAL_OPACITY: '0',\n  FINAL_SCALE: ''\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialRipple.prototype.CssClasses_ = {\n  RIPPLE_CENTER: 'mdl-ripple--center',\n  RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n  RIPPLE: 'mdl-ripple',\n  IS_ANIMATING: 'is-animating',\n  IS_VISIBLE: 'is-visible'\n};\n\n/**\n * Handle mouse / finger down on element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialRipple.prototype.downHandler_ = function(event) {\n  'use strict';\n\n  this.rippleElement_.classList.add(this.CssClasses_.IS_VISIBLE);\n\n  if (event.type === 'mousedown' && this.ignoringMouseDown_) {\n    this.ignoringMouseDown_ = false;\n  } else {\n    if (event.type === 'touchstart') {\n      this.ignoringMouseDown_ = true;\n    }\n    var frameCount = this.getFrameCount();\n    if (frameCount > 0) {\n      return;\n    }\n    this.setFrameCount(1);\n    var bound = event.currentTarget.getBoundingClientRect();\n    var x;\n    var y;\n    // Check if we are handling a keyboard click.\n    if (event.clientX === 0 && event.clientY === 0) {\n      x = Math.round(bound.width / 2);\n      y = Math.round(bound.height / 2);\n    } else {\n      var clientX = event.clientX ? event.clientX : event.touches[0].clientX;\n      var clientY = event.clientY ? event.clientY : event.touches[0].clientY;\n      x = Math.round(clientX - bound.left);\n      y = Math.round(clientY - bound.top);\n    }\n    this.setRippleXY(x, y);\n    this.setRippleStyles(true);\n    window.requestAnimationFrame(this.animFrameHandler.bind(this));\n  }\n};\n\n/**\n * Handle mouse / finger up on element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialRipple.prototype.upHandler_ = function(event) {\n  'use strict';\n\n  // Don't fire for the artificial \"mouseup\" generated by a double-click.\n  if (event && event.detail !== 2) {\n    this.rippleElement_.classList.remove(this.CssClasses_.IS_VISIBLE);\n  }\n};\n\n/**\n * Initialize element.\n */\nMaterialRipple.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    var recentering =\n        this.element_.classList.contains(this.CssClasses_.RIPPLE_CENTER);\n    if (!this.element_.classList.contains(\n        this.CssClasses_.RIPPLE_EFFECT_IGNORE_EVENTS)) {\n      this.rippleElement_ = this.element_.querySelector('.' +\n          this.CssClasses_.RIPPLE);\n      this.frameCount_ = 0;\n      this.rippleSize_ = 0;\n      this.x_ = 0;\n      this.y_ = 0;\n\n      // Touch start produces a compat mouse down event, which would cause a\n      // second ripples. To avoid that, we use this property to ignore the first\n      // mouse down after a touch start.\n      this.ignoringMouseDown_ = false;\n\n      if (this.rippleElement_) {\n        var bound = this.element_.getBoundingClientRect();\n        this.rippleSize_ = Math.sqrt(bound.width * bound.width +\n            bound.height * bound.height) * 2 + 2;\n        this.rippleElement_.style.width = this.rippleSize_ + 'px';\n        this.rippleElement_.style.height = this.rippleSize_ + 'px';\n      }\n\n      this.element_.addEventListener('mousedown', this.downHandler_.bind(this));\n      this.element_.addEventListener('touchstart',\n          this.downHandler_.bind(this));\n\n      this.element_.addEventListener('mouseup', this.upHandler_.bind(this));\n      this.element_.addEventListener('mouseleave', this.upHandler_.bind(this));\n      this.element_.addEventListener('touchend', this.upHandler_.bind(this));\n      this.element_.addEventListener('blur', this.upHandler_.bind(this));\n\n      this.getFrameCount = function() {\n        return this.frameCount_;\n      };\n\n      this.setFrameCount = function(fC) {\n        this.frameCount_ = fC;\n      };\n\n      this.getRippleElement = function() {\n        return this.rippleElement_;\n      };\n\n      this.setRippleXY = function(newX, newY) {\n        this.x_ = newX;\n        this.y_ = newY;\n      };\n\n      this.setRippleStyles = function(start) {\n        if (this.rippleElement_ !== null) {\n          var transformString;\n          var scale;\n          var size;\n          var offset = 'translate(' + this.x_ + 'px, ' + this.y_ + 'px)';\n\n          if (start) {\n            scale = this.Constant_.INITIAL_SCALE;\n            size = this.Constant_.INITIAL_SIZE;\n          } else {\n            scale = this.Constant_.FINAL_SCALE;\n            size = this.rippleSize_ + 'px';\n            if (recentering) {\n              offset = 'translate(' + bound.width / 2 + 'px, ' +\n                bound.height / 2 + 'px)';\n            }\n          }\n\n          transformString = 'translate(-50%, -50%) ' + offset + scale;\n\n          this.rippleElement_.style.webkitTransform = transformString;\n          this.rippleElement_.style.msTransform = transformString;\n          this.rippleElement_.style.transform = transformString;\n\n          if (start) {\n            this.rippleElement_.classList.remove(this.CssClasses_.IS_ANIMATING);\n          } else {\n            this.rippleElement_.classList.add(this.CssClasses_.IS_ANIMATING);\n          }\n        }\n      };\n\n      this.animFrameHandler = function() {\n        if (this.frameCount_-- > 0) {\n          window.requestAnimationFrame(this.animFrameHandler.bind(this));\n        } else {\n          this.setRippleStyles(false);\n        }\n      };\n    }\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialRipple,\n  classAsString: 'MaterialRipple',\n  cssClass: 'mdl-js-ripple-effect'\n});\n"],"sourceRoot":"/source/"}