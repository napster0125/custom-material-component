@import "../palette/palette";
@import "../animation/animation";

$textfieldBackgroundColor: transparent;
$textfieldLabelColor: rgba(0, 0, 0, 0.26);
$textfieldBottomBorderColor: rgba(0, 0, 0, 0.12);
$textfieldHighlightColor: nth($primaryPalette, 6);
$textfieldErrorColor: nth($paletteRed, 7);
$textfieldDisabledColor: $textfieldBottomBorderColor;

$textfieldFontSize: 16px;
$textfieldWidth: 100%;

$inputPadding: 4px;
$floatingLabelFontSize: 12px;

$expandableIconWidth: 24px;

.TextField {
  border       : none;
  border-bottom: 1px solid $textfieldBottomBorderColor;
  display      : block;
  font-size    : $textfieldFontSize;
  margin       : 0;
  padding      : $inputPadding 0;
  width        : $textfieldWidth;
  background   : $textfieldBackgroundColor;
}

.TextField ~ label {
  bottom        : 0;
  color         : $textfieldLabelColor;
  font-size     : $textfieldFontSize;
  left          : 0;
  right         : 0;
  pointer-events: none;
  position      : absolute;
  top           : $inputPadding;
  width         : 100%;
  overflow      : hidden;
  white-space   : nowrap;
}

/** The after label is the colored underline for the TextField **/
.TextField ~ label:after {
  background-color  : $textfieldHighlightColor;
  bottom            : 0;
  content           : '';
  height            : 2px;
  left              : 45%;
  position          : absolute;
  @include material-animation-default();
  visibility        : hidden;
  width             : 10px;
}

/** TextField Focus Styles **/
.TextField:focus {
  outline: none;
}

.TextField:focus ~ label:after {
  left      : 0;
  visibility: visible;
  width     : 100%;
}

/** TextField Invalid Styles **/
.TextField:invalid {
  border-color: $textfieldErrorColor;
  box-shadow  : none;
}

.TextField:invalid ~label:after {
  background-color: $textfieldErrorColor;
}

/** TextField Error **/
.TextField ~ .error {
  color     : $textfieldErrorColor;
  position  : absolute;
  font-size : 12px;
  margin-top: 3px;
  visibility: hidden;
}

.TextField:invalid ~ .error {
  visibility: visible;
}

.TextField.dirty ~ label {
  visibility: hidden;
}

/** Floating Label */
.TextField-floatingLabel ~label {
  @include material-animation-default();
}

.TextField-floatingLabel:focus ~ label,
.TextField-floatingLabel.dirty ~ label {
  color     : $textfieldHighlightColor;
  font-size : $floatingLabelFontSize;
  top       : -($floatingLabelFontSize+$inputPadding);
  visibility: visible;
}

.TextField-floatingLabel:invalid ~ label {
  color    : $textfieldErrorColor;
  font-size: 12px;
}

/** Expandable Input Label */
.TextField-expandable {
  @include material-animation-default();
  width: 0%;
  &:focus, &.dirty {
//    width: calc(#{$textfieldWidth} - #{$expandableIconWidth});
    width: 100%;
  }
}
.TextField-expandable ~ label {
  width: 0%;
}
.TextField-expandable:focus ~ label,
.TextField-expandable.dirty ~ label {
//  width: calc(#{$textfieldWidth} - #{$expandableIconWidth});
  width: 100%;
}

.ExpandableIcon {
  display: inline-block;
  width: $expandableIconWidth;
  text-align: center;
  border-color: #727272;  // inherits to .IconSearch
  position: absolute;
  margin-left: -$expandableIconWidth;
  height: 100%;

  &:hover {
    background: gray;
    border-color: #8cc44a;  // inherits to .IconSearch
  }
}

.IconSearch {
  border: 2px solid #000;
  border-color: inherit;
  border-radius: 100px;
  position: relative;
  box-sizing: border-box;
  width: 10px;
  height: 10px;
  display: inline-block;
  margin: 1px 5px -2px 1px;
  vertical-align: middle;
}
.IconSearch::after {
  content: "";
  transform: rotate(-45deg);
  width: 0;
  border-left: 2px solid #000;
  border-color: inherit;
  height: 5px;
  position: absolute;
  display: inline-block;
  bottom: -5px;
  right: -3px;
}
.IconSearch:hover {
}

/** Disabled Styling **/
.TextField[disabled] {
  background-color: transparent;
  border-bottom   : 1px dashed $textfieldDisabledColor;
}
