name: MDC Release

# This workflow does the following if repo does not have git tag that was updated in lerna.json
#  - creates release git tag
#  - publishes packages to NPM with latest tag
#
# This workflow is expected to run after merge of release pull requested created by release-pull-request workflow.

on:
  push:
    branches:
      - master
    paths:
      - 'lerna.json'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v2
        with:
          ref: master
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 10
          registry-url: https://registry.npmjs.org/
      - name: Install dependencies
        run: |
          npm install
      - name: Check if release tag is already created
        id: vars
        run: |
          MDC_CURRENT_VERSION="v$(npm run version --silent)"
          if [[ -z $(git tag -l "$MDC_CURRENT_VERSION") ]]; then
            echo "Proceeding to create new release"
          else
            echo "New release already created, exiting."
            exit 1
          fi
      - name: Build packages
        run: |
          npm run dist
          node scripts/cp-pkgs.js
          node scripts/verify-pkg-main.js
      - name: Create release tag
        run: |
          git reset --hard
          MDC_CURRENT_VERSION="v$(npm run version --silent)"
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          npx conventional-changelog --preset angular
          git tag "$MDC_CURRENT_VERSION"
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
          git push origin "$MDC_CURRENT_VERSION"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish to NPM registry
        run: npx lerna publish from-package --yes
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}
